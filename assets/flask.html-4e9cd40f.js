import{_ as c,r as o,o as u,c as r,a as n,b as s,d as a,w as d,e}from"./app-95e21c4a.js";const p="/assets/screen-02-51d0e9b3.png",k="/assets/screen-01-daad2671.png",v={},b={href:"https://python-dependency-injector.ets-labs.org/tutorials/flask.html",target:"_blank",rel:"noopener noreferrer"},m=e('<p>이 튜토리얼은 의존성 주입 원리에 따라 <code>Flask</code> 어플리케이션을 어떻게 만드는지 보여줍니다.</p><p>처음부터 시작하거나 원하는 절로 이동해보세요.</p><ul><li><a href="#what-are-we-going-to-build">무엇을 만들게 될까요?</a></li><li><a href="#prepare-the-environment">환경 준비하기</a></li><li><a href="#project-layout">프로젝트 구성</a></li><li><a href="#hello-world">Hello World!</a></li><li><a href="#make-it-pretty">예쁘게 만들어보기</a></li><li><a href="#connect-to-the-github">깃허브에 접속하기</a></li><li><a href="#search-service">검색 서비스</a></li><li><a href="#inject-search-service-into-view">검색 서비스를 뷰에 주입하기</a></li><li><a href="#make-some-refactoring">조금 리펙터링하기</a></li><li><a href="#tests">테스트</a></li><li><a href="#conclusion">결론</a></li></ul>',3),g={href:"https://github.com/ets-labs/python-dependency-injector/tree/master/examples/miniapps/flask",target:"_blank",rel:"noopener noreferrer"},h=e('<h2 id="what-are-we-going-to-build" tabindex="-1"><a class="header-anchor" href="#what-are-we-going-to-build" aria-hidden="true">#</a> 무엇을 만들게 될까요?</h2><p>깃허브의 레포지토리를 검색할 수 있는 웹 어플리케이션을 만들 것 입니다.<br> 이것을 깃허브 네비게이터라고 부르겠습니다.</p><p>깃허브 네비게이터가 무엇을 할 수 있을까요?</p><ul><li>사용자가 검색 쿼리를 제공할 수 있는 웹 페이지를 엽니다.</li><li>사용자가 쿼리를 입력하고 엔터를 입력합니다.</li><li>깃허브 네비게이터가 이것을 받아 깃허브에 일치하는 레포지토리를 검색합니다.</li><li>검색이 완료되면 깃허브 네비게이터는 사용자에게 결과를 웹페이지로 반환합니다.</li><li>결과 페이지는 일치하는 모든 레포지토리와 제공된 검색쿼리를 보여줍니다.</li><li>일치하는 레포지토리에 대하여 사용자는 다음을 볼 수 있습니다. <ul><li>레포지토리 이름</li><li>레포지토리의 소유자</li><li>레포지토리의 마지막 커밋</li></ul></li><li>사용자는 깃허브에 해당 웹페이지를 열기위해 레포지토리, 소유자, 마지막 커밋을 클릭할 수 있습니다.</li></ul><p><img src="'+p+`" alt="screen-02.png" loading="lazy"></p><h2 id="prepare-the-environment" tabindex="-1"><a class="header-anchor" href="#prepare-the-environment" aria-hidden="true">#</a> 환경 준비하기</h2><p>프로젝트를 위해 환경을 생성하겠습니다.</p><p>첫번째로 프로젝트 폴더를 구성합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> ghnav-flask-tutorial
<span class="token builtin class-name">cd</span> ghnav-flask-tutorial
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>이제 가상환경을 만들고 활성화 하겠습니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python3 <span class="token parameter variable">-m</span> venv venv
<span class="token builtin class-name">.</span> venv/bin/activate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="project-layout" tabindex="-1"><a class="header-anchor" href="#project-layout" aria-hidden="true">#</a> 프로젝트 구성</h2><p>환경이 준비되면 이제 프로젝트 구성을 할 차례입니다.</p><p>현재 디렉터리에 다음 구성을 생성합니다.<br> 모든 파일은 비어있지만 상관없습니다.</p><p>초기 프로젝트 구성:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./
├── githubnavigator/
│   ├── __init__.py
│   ├── application.py
│   ├── containers.py
│   └── views.py
├── venv/
└── requirements.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이제 <code>Flask</code>와 <code>Dependency Injector</code>를 설치하겠습니다.</p><p>다음 내용을 <code>requirements.txt</code> 파일에 입력합니다.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dependency-injector
flask
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>이제 설치하겠습니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>설치가 잘 되었는지 확인해봅니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python <span class="token parameter variable">-c</span> <span class="token string">&quot;import dependency_injector; print(dependency_injector.__version__)&quot;</span>
python <span class="token parameter variable">-c</span> <span class="token string">&quot;import flask; print(flask.__version__)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>아마 다음과 같을 것 입니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">(</span>venv<span class="token punctuation">)</span> $ python <span class="token parameter variable">-c</span> <span class="token string">&quot;import dependency_injector; print(dependency_injector.__version__)&quot;</span>
<span class="token number">4.37</span>.0
<span class="token punctuation">(</span>venv<span class="token punctuation">)</span> $ python <span class="token parameter variable">-c</span> <span class="token string">&quot;import flask; print(flask.__version__)&quot;</span>
<span class="token number">2.0</span>.2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>버전은 다를 수 있지만 괜찮습니다.</p><h2 id="hello-world" tabindex="-1"><a class="header-anchor" href="#hello-world" aria-hidden="true">#</a> Hello World!</h2><p>최소한의 어플리케이션을 만들겠습니다.</p><p>다음을 <code>views.py</code>에 입력합니다.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;Views module.&quot;&quot;&quot;</span>

<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Hello, World!&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이제 뷰를 가지게 되었습니다.</p><p>컨테이너를 만들겠습니다.<br> 컨테이너는 어플리케이션의 모든 컴포넌트와 그 의존성을 가지고 있습니다.</p><p><code>containers.py</code>를 수정합니다.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;Containers module.&quot;&quot;&quot;</span>

<span class="token keyword">from</span> dependency_injector <span class="token keyword">import</span> containers

<span class="token keyword">class</span> <span class="token class-name">Container</span><span class="token punctuation">(</span>containers<span class="token punctuation">.</span>DeclarativeContainer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>컨테이너는 현재 비어있습니다.<br> 이어지는 절에서 Provider를 추가할 것입니다.</p><p>마지막으로 Flask 어플리케이션 팩토리를 생성해야 합니다.<br> 컨테이너와 Flask 어플리케이션을 생성하고 구성하게 됩니다.<br> 일반적으로 <code>create_app()</code>을 호출합니다.<br> 웹 어플리케이션에서 상위(<code>/</code>)의 호출을 다루는 <code>index</code> 뷰를 할당하겠습니다.</p><p>다음을 <code>application.py</code>에 입력합니다.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;Application module.&quot;&quot;&quot;</span>

<span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask

<span class="token keyword">from</span> <span class="token punctuation">.</span>containers <span class="token keyword">import</span> Container
<span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> views

<span class="token keyword">def</span> <span class="token function">create_app</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Flask<span class="token punctuation">:</span>
    container <span class="token operator">=</span> Container<span class="token punctuation">(</span><span class="token punctuation">)</span>

    app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>
    app<span class="token punctuation">.</span>container <span class="token operator">=</span> container
    app<span class="token punctuation">.</span>add_url_rule<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;index&quot;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>index<span class="token punctuation">)</span>

    <span class="token keyword">return</span> app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>되었습니다.<br> 이제 &quot;Hello, World!&quot;를 이야기할 준비가 되었습니다.</p><p>다음을 터미널에서 실행합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">FLASK_APP</span><span class="token operator">=</span>githubnavigator.application
<span class="token builtin class-name">export</span> <span class="token assign-left variable">FLASK_ENV</span><span class="token operator">=</span>development
flask run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>출력이 다음과 같을 것 입니다.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>* Serving Flask app &quot;githubnavigator.application&quot; (lazy loading)
* Environment: development
* Debug mode: on
* Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
* Restarting with fsevents reloader
* Debugger is active!
* Debugger PIN: 473-587-859
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>브라우저를 열고 <code>http://127.0.0.1:5000/</code>에 접속합니다.</p><p><code>Hello, World!</code>를 볼 수 있습니다.</p><p>끝입니다.<br> 우리의 최소 어플리케이션이 기동되고 동작하고 있습니다.</p><h2 id="make-it-pretty" tabindex="-1"><a class="header-anchor" href="#make-it-pretty" aria-hidden="true">#</a> 예쁘게 만들어보기</h2>`,47),y=n("br",null,null,-1),_={href:"https://getbootstrap.com/",target:"_blank",rel:"noopener noreferrer"},f=n("br",null,null,-1),q={href:"https://pypi.org/project/Bootstrap-Flask/",target:"_blank",rel:"noopener noreferrer"},w=n("br",null,null,-1),x=e(`<p><code>requirements.txt</code>파일에 <code>bootstrap-flask</code>를 추가합니다.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dependency_injector
flask
bootstrap-flask
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고 터미널에서 실행합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>이제 <code>bootstrap-flask</code> 확장을 초기화하겠습니다.<br><code>create_app()</code>을 수정해야합니다.</p><p><code>application.py</code>를 수정합니다.</p>`,6),j=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{python:"",class:"language-python"},[n("code",null,[n("span",{class:"token triple-quoted-string string"},'"""Application module."""'),s(`

`),n("span",{class:"token keyword"},"from"),s(" flask "),n("span",{class:"token keyword"},"import"),s(` Flask
`),n("span",{class:"token keyword"},"from"),s(" flask_bootstrap "),n("span",{class:"token keyword"},"import"),s(` Bootstrap

`),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token punctuation"},"."),s("containers "),n("span",{class:"token keyword"},"import"),s(` Container
`),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token keyword"},"import"),s(` views

`),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"create_app"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" Flask"),n("span",{class:"token punctuation"},":"),s(`
    container `),n("span",{class:"token operator"},"="),s(" Container"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`

    app `),n("span",{class:"token operator"},"="),s(" Flask"),n("span",{class:"token punctuation"},"("),s("__name__"),n("span",{class:"token punctuation"},")"),s(`
    app`),n("span",{class:"token punctuation"},"."),s("container "),n("span",{class:"token operator"},"="),s(` container
    app`),n("span",{class:"token punctuation"},"."),s("add_url_rule"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"index"'),n("span",{class:"token punctuation"},","),s(" views"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},")"),s(`

    bootstrap `),n("span",{class:"token operator"},"="),s(" Bootstrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    bootstrap`),n("span",{class:"token punctuation"},"."),s("init_app"),n("span",{class:"token punctuation"},"("),s("app"),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token keyword"},"return"),s(` app
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=e(`<p>이제 템플릿을 추가합니다.<br> 이것을 위해 <code>githubnavigator</code> 패키지에 <code>templates/</code> 폴더를 생성하고 다음 두 파일을 추가합니다.</p><ul><li><code>base.html</code> - 구성</li><li><code>index.html</code> - 메인 페이지</li></ul><p><code>templates</code> 폴더를 생성하고 <code>base.html</code>, <code>index.html</code> 두 비어있는 파일을 추가합니다.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./
├── githubnavigator/
│   ├── templates/
│   │   ├── base.html
│   │   └── index.html
│   ├── __init__.py
│   ├── application.py
│   ├── containers.py
│   └── views.py
├── venv/
└── requirements.txt
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이제 구성을 채우겠습니다.</p><p><code>base.html</code>에 다음을 입력합니다.</p><div class="language-django line-numbers-mode" data-ext="django"><pre class="language-django"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">doctype</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
        <span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">block</span> <span class="token variable">head</span> <span class="token delimiter punctuation">%}</span></span>
        <span class="token comment">&lt;!-- Required meta tags --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1, shrink-to-fit=no<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

        <span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">block</span> <span class="token variable">styles</span> <span class="token delimiter punctuation">%}</span></span>
            <span class="token comment">&lt;!-- Bootstrap CSS --&gt;</span>
            <span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">bootstrap</span><span class="token punctuation">.</span><span class="token function">load_css</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token delimiter punctuation">}}</span></span>
        <span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">endblock</span> <span class="token delimiter punctuation">%}</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">block</span> <span class="token variable">title</span> <span class="token delimiter punctuation">%}</span></span><span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">endblock</span> <span class="token delimiter punctuation">%}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
        <span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">endblock</span> <span class="token delimiter punctuation">%}</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- Your page content --&gt;</span>
        <span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">block</span> <span class="token variable">content</span> <span class="token delimiter punctuation">%}</span></span><span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">endblock</span> <span class="token delimiter punctuation">%}</span></span>

        <span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">block</span> <span class="token variable">scripts</span> <span class="token delimiter punctuation">%}</span></span>
            <span class="token comment">&lt;!-- Optional JavaScript --&gt;</span>
            <span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">bootstrap</span><span class="token punctuation">.</span><span class="token function">load_js</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token delimiter punctuation">}}</span></span>
        <span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">endblock</span> <span class="token delimiter punctuation">%}</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고, 인덱스 페이지에 무언가를 추가하겠습니다.</p><p><code>index.html</code>에 다음을 입력하세요.</p><div class="language-django line-numbers-mode" data-ext="django"><pre class="language-django"><code><span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">extends</span> <span class="token string">&quot;base.html&quot;</span> <span class="token delimiter punctuation">%}</span></span>

<span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">block</span> <span class="token variable">title</span> <span class="token delimiter punctuation">%}</span></span>Github Navigator<span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">endblock</span> <span class="token delimiter punctuation">%}</span></span>

<span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">block</span> <span class="token variable">content</span> <span class="token delimiter punctuation">%}</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mb-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Github Navigator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-group form-row<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-10<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search_query<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-form-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    Search for:
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search_query<span class="token punctuation">&quot;</span></span>
                       <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Type something to search on the GitHub<span class="token punctuation">&quot;</span></span>
                       <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>query<span class="token punctuation">&quot;</span></span>
                       <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">query</span> <span class="token keyword">if</span> <span class="token variable">query</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search_limit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>col-form-label<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    Limit:
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form-control<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>search_limit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>limit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">for</span> <span class="token variable">value</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span> <span class="token delimiter punctuation">%}</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name"><span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">if</span> <span class="token variable">value</span> <span class="token operator">==</span> <span class="token variable">limit</span> <span class="token delimiter punctuation">%}</span></span>selected<span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">endif</span> <span class="token delimiter punctuation">%}</span></span></span><span class="token punctuation">&gt;</span></span>
                        <span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">value</span> <span class="token delimiter punctuation">}}</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>
                    <span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">endfor</span> <span class="token delimiter punctuation">%}</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">&gt;</span></span>Results found: <span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">repositories</span><span class="token operator">|</span><span class="token filter function">length</span> <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>table table-striped<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>#<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-nowrap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Repository owner<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-nowrap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Last commit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">&gt;</span></span>
        <span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">for</span> <span class="token variable">repository</span> <span class="token keyword">in</span> <span class="token variable">repositories</span> <span class="token delimiter punctuation">%}</span></span> <span class="token django language-django"><span class="token delimiter punctuation">{{</span><span class="token variable">n</span><span class="token delimiter punctuation">}}</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span><span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token keyword">loop</span><span class="token punctuation">.</span><span class="token variable">index</span> <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">repository</span><span class="token punctuation">.</span><span class="token variable">url</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                  <span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">repository</span><span class="token punctuation">.</span><span class="token variable">name</span> <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">repository</span><span class="token punctuation">.</span><span class="token variable">owner</span><span class="token punctuation">.</span><span class="token variable">url</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">repository</span><span class="token punctuation">.</span><span class="token variable">owner</span><span class="token punctuation">.</span><span class="token variable">avatar_url</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">&quot;</span></span>
                       <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>avatar<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>24<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>24<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">repository</span><span class="token punctuation">.</span><span class="token variable">owner</span><span class="token punctuation">.</span><span class="token variable">url</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                      <span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">repository</span><span class="token punctuation">.</span><span class="token variable">owner</span><span class="token punctuation">.</span><span class="token variable">login</span> <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">repository</span><span class="token punctuation">.</span><span class="token variable">latest_commit</span><span class="token punctuation">.</span><span class="token variable">url</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                  <span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">repository</span><span class="token punctuation">.</span><span class="token variable">latest_commit</span><span class="token punctuation">.</span><span class="token variable">sha</span> <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
                  <span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">repository</span><span class="token punctuation">.</span><span class="token variable">latest_commit</span><span class="token punctuation">.</span><span class="token variable">message</span> <span class="token delimiter punctuation">}}</span></span>
                  <span class="token django language-django"><span class="token delimiter punctuation">{{</span> <span class="token variable">repository</span><span class="token punctuation">.</span><span class="token variable">latest_commit</span><span class="token punctuation">.</span><span class="token variable">author_name</span> <span class="token delimiter punctuation">}}</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
        <span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">endfor</span> <span class="token delimiter punctuation">%}</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token django language-django"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">endblock</span> <span class="token delimiter punctuation">%}</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>거의 다와갑니다.<br> 마지막 단계는 <code>index.html</code> 템플릿을 렌더링하기 위해 <code>index</code> 뷰를 만들겠습니다.</p><p><code>views.py</code>를 편집합니다.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;Views modules.&quot;&quot;&quot;</span>

<span class="token keyword">from</span> flask <span class="token keyword">import</span> request<span class="token punctuation">,</span> render_template

<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    query <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;query&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Dependency Injector&quot;</span><span class="token punctuation">)</span>
    limit <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;limit&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span>

    repositories <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span>
        <span class="token string">&quot;index.html&quot;</span><span class="token punctuation">,</span>
        query<span class="token operator">=</span>query<span class="token punctuation">,</span>
        limit<span class="token operator">=</span>limit<span class="token punctuation">,</span>
        repositories<span class="token operator">=</span>repositories<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>끝입니다.</p><p>어플리케이션을 실행하거나 <code>flask run</code>를 사용합니다.<br> 그리고 <code>http://127.0.0.1:5000/</code>에 접속합니다.</p><p>아래와 같이 볼 수 있습니다.</p><p><img src="`+k+'" alt="screen-01.png" loading="lazy"></p><h2 id="connect-to-the-github" tabindex="-1"><a class="header-anchor" href="#connect-to-the-github" aria-hidden="true">#</a> 깃허브에 접속하기</h2><p>이번 절에서는 어플리케이션에 깃허브 API를 통합해보겠습니다.</p>',19),S={href:"https://github.com/PyGithub/PyGithub",target:"_blank",rel:"noopener noreferrer"},P=e(`<p><code>requirements.txt</code>에 추가하겠습니다.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dependency-injector
flask
bootstrap-flask
pygithub
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고 터미널에서 다음을 실행합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>이제 컨테이너에 깃허브 API 클라이언트를 추가합니다.<br><code>dependency_injector.providers</code> 모듈에서 두개 이상의 Provider를 추가할 수 있습니다.</p><ul><li><code>Factory</code> Provider. <code>Github</code> 클라이언트를 생성합니다.</li><li><code>Configuration</code> Provider. <code>Github</code> 클라이언트의 API 토큰과 요청 타임아웃을 제공합니다. 구성 파일의 위치를 지정합니다. 구성 Provider는 컨테이너 인스턴스가 생성될 때 구성파일을 파싱합니다.</li></ul><p><code>containers.py</code>를 편집합니다.</p>`,7),F=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{python:"",class:"language-python"},[n("code",null,[n("span",{class:"token triple-quoted-string string"},'"""Containers module."""'),s(`

`),n("span",{class:"token keyword"},"from"),s(" dependency_injector "),n("span",{class:"token keyword"},"import"),s(" containers"),n("span",{class:"token punctuation"},","),s(` providers
`),n("span",{class:"token keyword"},"from"),s(" github "),n("span",{class:"token keyword"},"import"),s(` Github


`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Container"),n("span",{class:"token punctuation"},"("),s("containers"),n("span",{class:"token punctuation"},"."),s("DeclarativeContainer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`

    config `),n("span",{class:"token operator"},"="),s(" providers"),n("span",{class:"token punctuation"},"."),s("Configuration"),n("span",{class:"token punctuation"},"("),s("yaml_files"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"config.yml"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`

    github_client `),n("span",{class:"token operator"},"="),s(" providers"),n("span",{class:"token punctuation"},"."),s("Factory"),n("span",{class:"token punctuation"},"("),s(`
        Github`),n("span",{class:"token punctuation"},","),s(`
        login_or_token`),n("span",{class:"token operator"},"="),s("config"),n("span",{class:"token punctuation"},"."),s("github"),n("span",{class:"token punctuation"},"."),s("auth_token"),n("span",{class:"token punctuation"},","),s(`
        timeout`),n("span",{class:"token operator"},"="),s("config"),n("span",{class:"token punctuation"},"."),s("github"),n("span",{class:"token punctuation"},"."),s("request_timeout"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," ")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),G=e(`<div class="hint-container note"><p class="hint-container-title">Note</p><p>컨테이너에서 마침표(<code>...</code>)를 지우는 것을 잊지마세요.<br> 컨테이너가 이제 비어있지 않으므로 필요가 없습니다.</p></div><p>이제 구성파일을 추가하겠습니다.<br> YAML을 사용할 것 입니다.<br> 프로젝트 최상위에 비어있는 <code>config.yml</code> 파일을 생성합니다.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./
├── githubnavigator/
│   ├── templates/
│   │   ├── base.html
│   │   └── index.html
│   ├── __init__.py
│   ├── application.py
│   ├── containers.py
│   └── views.py
├── venv/
├── config.yml
└── requirements.txt
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고 다음 내용을 추가합니다.</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">github</span><span class="token punctuation">:</span>
  <span class="token key atrule">request_timeout</span><span class="token punctuation">:</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5),A={href:"https://pypi.org/project/PyYAML/",target:"_blank",rel:"noopener noreferrer"},I=n("br",null,null,-1),B=e(`<p><code>requirements.txt</code>를 편집합니다.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dependency-injector
flask
bootstrap-flask
pygithub
pyyaml
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고 설치하겠습니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>API 토큰을 제공하기 위해 <code>GITHUB_TOKEN</code> 환경변수를 사용할 것 입니다.<br><code>create_app()</code>을 편집하여 토큰값을 가져오겠습니다.</p><p><code>application.py</code>를 편집합니다.</p>`,6),N=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{python:"",class:"language-python"},[n("code",null,[n("span",{class:"token triple-quoted-string string"},'"""Application module."""'),s(`

`),n("span",{class:"token keyword"},"from"),s(" flask "),n("span",{class:"token keyword"},"import"),s(` Flask
`),n("span",{class:"token keyword"},"from"),s(" flask_bootstrap "),n("span",{class:"token keyword"},"import"),s(` Bootstrap

`),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token punctuation"},"."),s("containers "),n("span",{class:"token keyword"},"import"),s(` Container
`),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token keyword"},"import"),s(` views


`),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"create_app"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(" Flask"),n("span",{class:"token punctuation"},":"),s(`
    container `),n("span",{class:"token operator"},"="),s(" Container"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    container`),n("span",{class:"token punctuation"},"."),s("config"),n("span",{class:"token punctuation"},"."),s("github"),n("span",{class:"token punctuation"},"."),s("auth_token"),n("span",{class:"token punctuation"},"."),s("from_env"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"GITHUB_TOKEN"'),n("span",{class:"token punctuation"},")"),s(`

    app `),n("span",{class:"token operator"},"="),s(" Flask"),n("span",{class:"token punctuation"},"("),s("__name__"),n("span",{class:"token punctuation"},")"),s(`
    app`),n("span",{class:"token punctuation"},"."),s("container "),n("span",{class:"token operator"},"="),s(` container
    app`),n("span",{class:"token punctuation"},"."),s("add_url_rule"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"index"'),n("span",{class:"token punctuation"},","),s(" views"),n("span",{class:"token punctuation"},"."),s("index"),n("span",{class:"token punctuation"},")"),s(`

    bootstrap `),n("span",{class:"token operator"},"="),s(" Bootstrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    bootstrap`),n("span",{class:"token punctuation"},"."),s("init_app"),n("span",{class:"token punctuation"},"("),s("app"),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token keyword"},"return"),s(` app
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),M=e(`<p>이제 API 토큰을 만들어야 합니다.</p><p>지금은 걱정말고 아래것을 사용하겠습니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">GITHUB_TOKEN</span><span class="token operator">=</span>cbde697a6e01424856fde2b7f94a88d1b501320e
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),L={class:"hint-container note"},R=n("p",{class:"hint-container-title"},"Note",-1),T=n("p",null,"자체 토큰을 생성하려면",-1),D={href:"https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token",target:"_blank",rel:"noopener noreferrer"},H=e(`<li>환경변수에 토큰을 설정합니다.<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">GITHUB_TOKEN</span><span class="token operator">=</span><span class="token operator">&lt;</span>your token<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,1),E=e(`<p>다했습니다.</p><p>깃허브 API 클라이언트 설정이 완료되었습니다.</p><h2 id="search-service" tabindex="-1"><a class="header-anchor" href="#search-service" aria-hidden="true">#</a> 검색 서비스</h2><p>이제 <code>SearchService</code>를 추가할 차례입니다.</p><ul><li>검색을 수행합니다.</li><li>각 결과에 커밋 추가데이터를 가져옵니다.</li><li>결과 데이터를 포맷팅합니다.</li></ul><p><code>SearchService</code>는 <code>Github</code> API 클라이언트를 사용할 것입니다.</p><p><code>githubnavigator</code> 패키지에 빈 <code>services.py</code>를 생성합니다.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./
├── githubnavigator/
│   ├── templates/
│   │   ├── base.html
│   │   └── index.html
│   ├── __init__.py
│   ├── application.py
│   ├── containers.py
│   ├── services.py
│   └── views.py
├── venv/
├── config.yml
└── requirements.txt
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고 다음을 입력합니다.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;Services module.&quot;&quot;&quot;</span>

<span class="token keyword">from</span> github <span class="token keyword">import</span> Github
<span class="token keyword">from</span> github<span class="token punctuation">.</span>Repository <span class="token keyword">import</span> Repository
<span class="token keyword">from</span> github<span class="token punctuation">.</span>Commit <span class="token keyword">import</span> Commit


<span class="token keyword">class</span> <span class="token class-name">SearchService</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;Search Service는 깃허브에서 검색을 수행합니다.&quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> github_client<span class="token punctuation">:</span> Github<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>_github_client <span class="token operator">=</span> github_client

    <span class="token keyword">def</span> <span class="token function">search_repositories</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> query<span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;레포지토리를 검색하고 정제된 데이터를 반환합니다.&quot;&quot;&quot;</span>
        repositores <span class="token operator">=</span> self<span class="token punctuation">.</span>_github_client<span class="token punctuation">.</span>search_repositories<span class="token punctuation">(</span>
            query<span class="token operator">=</span>query<span class="token punctuation">,</span>
            <span class="token operator">**</span><span class="token punctuation">{</span><span class="token string">&quot;in&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>
            self<span class="token punctuation">.</span>_format_repo<span class="token punctuation">(</span>repository<span class="token punctuation">)</span>
            <span class="token keyword">for</span> repository <span class="token keyword">in</span> repositories<span class="token punctuation">[</span><span class="token punctuation">:</span>limit<span class="token punctuation">]</span>
        <span class="token punctuation">]</span>
    <span class="token keyword">def</span> <span class="token function">_format_repo</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> repository<span class="token punctuation">:</span> Repository<span class="token punctuation">)</span><span class="token punctuation">:</span>
        commits <span class="token operator">=</span> repository<span class="token punctuation">.</span>get_commits<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;url&quot;</span><span class="token punctuation">:</span> repository<span class="token punctuation">.</span>html_url<span class="token punctuation">,</span>
            <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> repository<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
            <span class="token string">&quot;owner&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;login&quot;</span><span class="token punctuation">:</span> repository<span class="token punctuation">.</span>owner<span class="token punctuation">.</span>login<span class="token punctuation">,</span>
                <span class="token string">&quot;url&quot;</span><span class="token punctuation">:</span> repository<span class="token punctuation">.</span>owner<span class="token punctuation">.</span>html_url<span class="token punctuation">,</span>
                <span class="token string">&quot;avatar_url&quot;</span><span class="token punctuation">:</span> repository<span class="token punctuation">.</span>owner<span class="token punctuation">.</span>avatar_url<span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">&quot;latest_commit&quot;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>_format_commit<span class="token punctuation">(</span>commits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">if</span> commits <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    
    <span class="token keyword">def</span> <span class="token function">_format_commit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> commit<span class="token punctuation">:</span> Commit<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;sha&quot;</span><span class="token punctuation">:</span> commit<span class="token punctuation">.</span>sha<span class="token punctuation">,</span>
            <span class="token string">&quot;url&quot;</span><span class="token punctuation">:</span> commit<span class="token punctuation">.</span>html_url<span class="token punctuation">,</span>
            <span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> commit<span class="token punctuation">.</span>commit<span class="token punctuation">.</span>message<span class="token punctuation">,</span>
            <span class="token string">&quot;author_name&quot;</span><span class="token punctuation">:</span> commit<span class="token punctuation">.</span>commit<span class="token punctuation">.</span>author<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이제 컨테이너에 <code>SearchService</code>를 추가합니다.</p><p><code>conainers.py</code>를 편집합니다.</p>`,12),V=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{python:"",class:"language-python"},[n("code",null,[n("span",{class:"token triple-quoted-string string"},'"""Containers module."""'),s(`

`),n("span",{class:"token keyword"},"from"),s(" dependency_injector "),n("span",{class:"token keyword"},"import"),s(" containers"),n("span",{class:"token punctuation"},","),s(` providers
`),n("span",{class:"token keyword"},"from"),s(" github "),n("span",{class:"token keyword"},"import"),s(` Github

`),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token keyword"},"import"),s(` services


`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Container"),n("span",{class:"token punctuation"},"("),s("containers"),n("span",{class:"token punctuation"},"."),s("DeclarativeContainer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`

    config `),n("span",{class:"token operator"},"="),s(" providers"),n("span",{class:"token punctuation"},"."),s("Configuration"),n("span",{class:"token punctuation"},"("),s("yaml_files"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"config.yml"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`

    github_client `),n("span",{class:"token operator"},"="),s(" providers"),n("span",{class:"token punctuation"},"."),s("Factory"),n("span",{class:"token punctuation"},"("),s(`
        Github`),n("span",{class:"token punctuation"},","),s(`
        login_or_token`),n("span",{class:"token operator"},"="),s("config"),n("span",{class:"token punctuation"},"."),s("github"),n("span",{class:"token punctuation"},"."),s("auth_token"),n("span",{class:"token punctuation"},","),s(`
        timeout`),n("span",{class:"token operator"},"="),s("config"),n("span",{class:"token punctuation"},"."),s("github"),n("span",{class:"token punctuation"},"."),s("request_timeout"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},")"),s(`

    search_service `),n("span",{class:"token operator"},"="),s(" providers"),n("span",{class:"token punctuation"},"."),s("Factory"),n("span",{class:"token punctuation"},"("),s(`
        services`),n("span",{class:"token punctuation"},"."),s("SearchService"),n("span",{class:"token punctuation"},","),s(`
        github_client`),n("span",{class:"token operator"},"="),s("github_client"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," ")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),K=n("h2",{id:"inject-search-service-into-view",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#inject-search-service-into-view","aria-hidden":"true"},"#"),s(" 검색 서비스를 뷰에 주입하기")],-1),O=n("p",null,"이제 검색작업을 만들 준비가 되었습니다.",-1),W=n("code",null,"index",-1),Y=n("code",null,"SearchService",-1),z=n("br",null,null,-1),U={href:"https://python-dependency-injector.ets-labs.org/wiring.html#wiring",target:"_blank",rel:"noopener noreferrer"},$=n("p",null,[n("code",null,"views.py"),s("를 편집합니다.")],-1),J=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{python:"",class:"language-python"},[n("code",null,[n("span",{class:"token triple-quoted-string string"},'"""Views module."""'),s(`

`),n("span",{class:"token keyword"},"from"),s(" flask "),n("span",{class:"token keyword"},"import"),s(" request"),n("span",{class:"token punctuation"},","),s(` render_template
`),n("span",{class:"token keyword"},"from"),s(" dependency_injector"),n("span",{class:"token punctuation"},"."),s("wiring "),n("span",{class:"token keyword"},"import"),s(" inject"),n("span",{class:"token punctuation"},","),s(` Provide

`),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token punctuation"},"."),s("services "),n("span",{class:"token keyword"},"import"),s(` SearchService
`),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token punctuation"},"."),s("containers "),n("span",{class:"token keyword"},"import"),s(` Container


`),n("span",{class:"token decorator annotation punctuation"},"@inject"),s(`
`),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"index"),n("span",{class:"token punctuation"},"("),s("search_service"),n("span",{class:"token punctuation"},":"),s(" SearchService "),n("span",{class:"token operator"},"="),s(" Provide"),n("span",{class:"token punctuation"},"["),s("Container"),n("span",{class:"token punctuation"},"."),s("search_service"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    query `),n("span",{class:"token operator"},"="),s(" request"),n("span",{class:"token punctuation"},"."),s("args"),n("span",{class:"token punctuation"},"."),s("get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"query"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"Dependency Injector"'),n("span",{class:"token punctuation"},")"),s(`
    limit `),n("span",{class:"token operator"},"="),s(" request"),n("span",{class:"token punctuation"},"."),s("args"),n("span",{class:"token punctuation"},"."),s("get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"limit"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},")"),s(`

    repositories `),n("span",{class:"token operator"},"="),s(" search_service"),n("span",{class:"token punctuation"},"."),s("search_repositories"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},","),s(" limit"),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token keyword"},"return"),s(" render_template"),n("span",{class:"token punctuation"},"("),s(`
        `),n("span",{class:"token string"},'"index.html"'),n("span",{class:"token punctuation"},","),s(`
        query`),n("span",{class:"token operator"},"="),s("query"),n("span",{class:"token punctuation"},","),s(`
        limit`),n("span",{class:"token operator"},"="),s("limit"),n("span",{class:"token punctuation"},","),s(`
        repositories`),n("span",{class:"token operator"},"="),s("repositories"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Q=n("p",null,[s("주입작업이 동작하기 위해 컨테이너에 "),n("code",null,"view"),s(" 모듈을 연결해야합니다."),n("br"),s(" 컨테이너 인스턴스가 생성될 때 자동으로 "),n("code",null,"views"),s(" 모듈에 연결할 수 있도록 컨테이너를 구성하겠습니다.")],-1),X=n("p",null,[n("code",null,"containers.py"),s("를 편집합니다.")],-1),Z=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{python:"",class:"language-python"},[n("code",null,[n("span",{class:"token triple-quoted-string string"},'"""Containers module."""'),s(`

`),n("span",{class:"token keyword"},"from"),s(" dependency_injector "),n("span",{class:"token keyword"},"import"),s(" containers"),n("span",{class:"token punctuation"},","),s(` providers
`),n("span",{class:"token keyword"},"from"),s(" github "),n("span",{class:"token keyword"},"import"),s(` Github

`),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token punctuation"},"."),s(),n("span",{class:"token keyword"},"import"),s(` services


`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Container"),n("span",{class:"token punctuation"},"("),s("containers"),n("span",{class:"token punctuation"},"."),s("DeclarativeContainer"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`

    wiring_config `),n("span",{class:"token operator"},"="),s(" containers"),n("span",{class:"token punctuation"},"."),s("WiringConfiguration"),n("span",{class:"token punctuation"},"("),s("modules"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'".views"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`

    config `),n("span",{class:"token operator"},"="),s(" providers"),n("span",{class:"token punctuation"},"."),s("Configuration"),n("span",{class:"token punctuation"},"("),s("yaml_files"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"config.yml"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(`

    github_client `),n("span",{class:"token operator"},"="),s(" providers"),n("span",{class:"token punctuation"},"."),s("Factory"),n("span",{class:"token punctuation"},"("),s(`
        Github`),n("span",{class:"token punctuation"},","),s(`
        login_or_token`),n("span",{class:"token operator"},"="),s("config"),n("span",{class:"token punctuation"},"."),s("github"),n("span",{class:"token punctuation"},"."),s("auth_token"),n("span",{class:"token punctuation"},","),s(`
        timeout`),n("span",{class:"token operator"},"="),s("config"),n("span",{class:"token punctuation"},"."),s("github"),n("span",{class:"token punctuation"},"."),s("request_timeout"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},")"),s(`

    search_service `),n("span",{class:"token operator"},"="),s(" providers"),n("span",{class:"token punctuation"},"."),s("Factory"),n("span",{class:"token punctuation"},"("),s(`
        services`),n("span",{class:"token punctuation"},"."),s("SearchService"),n("span",{class:"token punctuation"},","),s(`
        github_client`),n("span",{class:"token operator"},"="),s("github_client"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),nn=e('<p>앱을 실행하거나 <code>flask run</code>을 사용합니다.<br> 그리고 <code>http://127.0.0.1:5000/</code>을 탐색합니다.</p><p>그럼 아래와 같이 볼 수 있습니다.</p><p><img src="'+p+'" alt="screen-02.png" loading="lazy"></p><h2 id="make-some-refactoring" tabindex="-1"><a class="header-anchor" href="#make-some-refactoring" aria-hidden="true">#</a> 조금 리펙터링하기</h2><p><code>index</code> 뷰는 두개의 하드코드로 된 구성값을 가지고 있습니다.</p><ul><li>기본 검색 쿼리</li><li>기본 검색 제한</li></ul><p>약간의 리펙터링을 하겠습니다.<br> 이 값을 구성으로 이동해보겠습니다.</p><p><code>views.py</code>를 편집합니다.</p>',8),sn=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{python:"",class:"language-python"},[n("code",null,[n("span",{class:"token triple-quoted-string string"},'"""Views module."""'),s(`

`),n("span",{class:"token keyword"},"from"),s(" flask "),n("span",{class:"token keyword"},"import"),s(" request"),n("span",{class:"token punctuation"},","),s(` render_template
`),n("span",{class:"token keyword"},"from"),s(" dependency_injector"),n("span",{class:"token punctuation"},"."),s("wiring "),n("span",{class:"token keyword"},"import"),s(" inject"),n("span",{class:"token punctuation"},","),s(` Provide

`),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token punctuation"},"."),s("services "),n("span",{class:"token keyword"},"import"),s(` SearchService
`),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token punctuation"},"."),s("containers "),n("span",{class:"token keyword"},"import"),s(` Container


`),n("span",{class:"token decorator annotation punctuation"},"@inject"),s(`
`),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"index"),n("span",{class:"token punctuation"},"("),s(`
        search_service`),n("span",{class:"token punctuation"},":"),s(" SearchService "),n("span",{class:"token operator"},"="),s(" Provide"),n("span",{class:"token punctuation"},"["),s("Container"),n("span",{class:"token punctuation"},"."),s("search_service"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
        default_query`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token builtin"},"str"),s(),n("span",{class:"token operator"},"="),s(" Provide"),n("span",{class:"token punctuation"},"["),s("Container"),n("span",{class:"token punctuation"},"."),s("config"),n("span",{class:"token punctuation"},"."),s("default"),n("span",{class:"token punctuation"},"."),s("query"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
        default_limit`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token builtin"},"int"),s(),n("span",{class:"token operator"},"="),s(" Provide"),n("span",{class:"token punctuation"},"["),s("Container"),n("span",{class:"token punctuation"},"."),s("config"),n("span",{class:"token punctuation"},"."),s("default"),n("span",{class:"token punctuation"},"."),s("limit"),n("span",{class:"token punctuation"},"."),s("as_int"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    query `),n("span",{class:"token operator"},"="),s(" request"),n("span",{class:"token punctuation"},"."),s("args"),n("span",{class:"token punctuation"},"."),s("get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"query"'),n("span",{class:"token punctuation"},","),s(" default_query"),n("span",{class:"token punctuation"},")"),s(`
    limit `),n("span",{class:"token operator"},"="),s(" request"),n("span",{class:"token punctuation"},"."),s("args"),n("span",{class:"token punctuation"},"."),s("get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"limit"'),n("span",{class:"token punctuation"},","),s(" default_limit"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},")"),s(`

    repositories `),n("span",{class:"token operator"},"="),s(" search_service"),n("span",{class:"token punctuation"},"."),s("search_repositories"),n("span",{class:"token punctuation"},"("),s("query"),n("span",{class:"token punctuation"},","),s(" limit"),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token keyword"},"return"),s(" render_template"),n("span",{class:"token punctuation"},"("),s(`
        `),n("span",{class:"token string"},'"index.html"'),n("span",{class:"token punctuation"},","),s(`
        query`),n("span",{class:"token operator"},"="),s("query"),n("span",{class:"token punctuation"},","),s(`
        limit`),n("span",{class:"token operator"},"="),s("limit"),n("span",{class:"token punctuation"},","),s(`
        repositories`),n("span",{class:"token operator"},"="),s("repositories"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),an=n("p",null,[n("code",null,"config.yml"),s("를 편집합니다.")],-1),tn=n("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[n("pre",{yaml:"",class:"language-yaml"},[n("code",null,[n("span",{class:"token key atrule"},"github"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token key atrule"},"request_timeout"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"10"),s(`
`),n("span",{class:"token key atrule"},"default"),n("span",{class:"token punctuation"},":"),s(`
  `),n("span",{class:"token key atrule"},"query"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token string"},'"Dependency Injector"'),s(`
  `),n("span",{class:"token key atrule"},"limit"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"10"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," ")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),en=n("h2",{id:"tests",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tests","aria-hidden":"true"},"#"),s(" 테스트")],-1),on=n("p",null,"이번 절에서는 몇개의 테스트를 추가해보겠습니다.",-1),pn={href:"https://docs.pytest.org/en/stable/",target:"_blank",rel:"noopener noreferrer"},ln={href:"https://coverage.readthedocs.io/",target:"_blank",rel:"noopener noreferrer"},cn=e(`<p><code>requirements.txt</code>를 편집합니다.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dependency-injector
flask
bootstrap-flask
pygithub
pyyaml
pytest-flask
pytest-cov
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고 추가된 패키지를 설치합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>githubnavigator</code> 패키지에 빈 <code>tests.py</code>를 생성합니다.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>./
├── githubnavigator/
│   ├── templates/
│   │   ├── base.html
│   │   └── index.html
│   ├── __init__.py
│   ├── application.py
│   ├── containers.py
│   ├── services.py
│   ├── tests.py
│   └── views.py
├── venv/
├── config.yml
└── requirements.txt
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고 다음내용을 추가합니다.</p>`,7),un=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{python:"",class:"language-python"},[n("code",null,[n("span",{class:"token triple-quoted-string string"},'"""Tests module."""'),s(`

`),n("span",{class:"token keyword"},"from"),s(" unittest "),n("span",{class:"token keyword"},"import"),s(` mock

`),n("span",{class:"token keyword"},"import"),s(` pytest
`),n("span",{class:"token keyword"},"from"),s(" github "),n("span",{class:"token keyword"},"import"),s(` Github
`),n("span",{class:"token keyword"},"from"),s(" flask "),n("span",{class:"token keyword"},"import"),s(` url_for

`),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token punctuation"},"."),s("application "),n("span",{class:"token keyword"},"import"),s(` create_app


`),n("span",{class:"token decorator annotation punctuation"},[s("@pytest"),n("span",{class:"token punctuation"},"."),s("fixture")]),s(`
`),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"app"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    app `),n("span",{class:"token operator"},"="),s(" create_app"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"yield"),s(` app
    app`),n("span",{class:"token punctuation"},"."),s("container"),n("span",{class:"token punctuation"},"."),s("unwire"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(`


`),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"test_index"),n("span",{class:"token punctuation"},"("),s("client"),n("span",{class:"token punctuation"},","),s(" app"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    github_client_mock `),n("span",{class:"token operator"},"="),s(" mock"),n("span",{class:"token punctuation"},"."),s("Mock"),n("span",{class:"token punctuation"},"("),s("spec"),n("span",{class:"token operator"},"="),s("Github"),n("span",{class:"token punctuation"},")"),s(`
    github_client_mock`),n("span",{class:"token punctuation"},"."),s("search_repositories"),n("span",{class:"token punctuation"},"."),s("return_value "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),s(`
        mock`),n("span",{class:"token punctuation"},"."),s("Mock"),n("span",{class:"token punctuation"},"("),s(`
            html_url`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"repo1-url"'),n("span",{class:"token punctuation"},","),s(`
            name`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"repo1-name"'),n("span",{class:"token punctuation"},","),s(`
            owner`),n("span",{class:"token operator"},"="),s("mock"),n("span",{class:"token punctuation"},"."),s("Mock"),n("span",{class:"token punctuation"},"("),s(`
                login`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"owner1-login"'),n("span",{class:"token punctuation"},","),s(`
                html_url`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"owner1-url"'),n("span",{class:"token punctuation"},","),s(`
                avatar_url`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"owner1-avatar-url"'),n("span",{class:"token punctuation"},","),s(`
            `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
            get_commits`),n("span",{class:"token operator"},"="),s("mock"),n("span",{class:"token punctuation"},"."),s("Mock"),n("span",{class:"token punctuation"},"("),s("return_value"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"["),s("mock"),n("span",{class:"token punctuation"},"."),s("Mock"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        mock`),n("span",{class:"token punctuation"},"."),s("Mock"),n("span",{class:"token punctuation"},"("),s(`
            html_url`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"repo2-url"'),n("span",{class:"token punctuation"},","),s(`
            name`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"repo2-name"'),n("span",{class:"token punctuation"},","),s(`
            owner`),n("span",{class:"token operator"},"="),s("mock"),n("span",{class:"token punctuation"},"."),s("Mock"),n("span",{class:"token punctuation"},"("),s(`
                login`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"owner2-login"'),n("span",{class:"token punctuation"},","),s(`
                html_url`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"owner2-url"'),n("span",{class:"token punctuation"},","),s(`
                avatar_url`),n("span",{class:"token operator"},"="),n("span",{class:"token string"},'"owner2-avatar-url"'),n("span",{class:"token punctuation"},","),s(`
            `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
            get_commits`),n("span",{class:"token operator"},"="),s("mock"),n("span",{class:"token punctuation"},"."),s("Mock"),n("span",{class:"token punctuation"},"("),s("return_value"),n("span",{class:"token operator"},"="),n("span",{class:"token punctuation"},"["),s("mock"),n("span",{class:"token punctuation"},"."),s("Mock"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"]"),s(`

    `),n("span",{class:"token keyword"},"with"),s(" app"),n("span",{class:"token punctuation"},"."),s("container"),n("span",{class:"token punctuation"},"."),s("github_client"),n("span",{class:"token punctuation"},"."),s("override"),n("span",{class:"token punctuation"},"("),s("github_client_mock"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        response `),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),s("get"),n("span",{class:"token punctuation"},"("),s("url_for"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"index"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token keyword"},"assert"),s(" response"),n("span",{class:"token punctuation"},"."),s("status_code "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"200"),s(`
    `),n("span",{class:"token keyword"},"assert"),s(),n("span",{class:"token string"},'b"Results found: 2"'),s(),n("span",{class:"token keyword"},"in"),s(" response"),n("span",{class:"token punctuation"},"."),s(`data

    `),n("span",{class:"token keyword"},"assert"),s(),n("span",{class:"token string"},'b"repo1-url"'),s(),n("span",{class:"token keyword"},"in"),s(" response"),n("span",{class:"token punctuation"},"."),s(`data
    `),n("span",{class:"token keyword"},"assert"),s(),n("span",{class:"token string"},'b"repo1-name"'),s(),n("span",{class:"token keyword"},"in"),s(" response"),n("span",{class:"token punctuation"},"."),s(`data
    `),n("span",{class:"token keyword"},"assert"),s(),n("span",{class:"token string"},'b"owner1-login"'),s(),n("span",{class:"token keyword"},"in"),s(" response"),n("span",{class:"token punctuation"},"."),s(`data
    `),n("span",{class:"token keyword"},"assert"),s(),n("span",{class:"token string"},'b"owner1-url"'),s(),n("span",{class:"token keyword"},"in"),s(" response"),n("span",{class:"token punctuation"},"."),s(`data
    `),n("span",{class:"token keyword"},"assert"),s(),n("span",{class:"token string"},'b"owner1-avatar-url"'),s(),n("span",{class:"token keyword"},"in"),s(" response"),n("span",{class:"token punctuation"},"."),s(`data

    `),n("span",{class:"token keyword"},"assert"),s(),n("span",{class:"token string"},'b"repo2-url"'),s(),n("span",{class:"token keyword"},"in"),s(" response"),n("span",{class:"token punctuation"},"."),s(`data
    `),n("span",{class:"token keyword"},"assert"),s(),n("span",{class:"token string"},'b"repo2-name"'),s(),n("span",{class:"token keyword"},"in"),s(" response"),n("span",{class:"token punctuation"},"."),s(`data
    `),n("span",{class:"token keyword"},"assert"),s(),n("span",{class:"token string"},'b"owner2-login"'),s(),n("span",{class:"token keyword"},"in"),s(" response"),n("span",{class:"token punctuation"},"."),s(`data
    `),n("span",{class:"token keyword"},"assert"),s(),n("span",{class:"token string"},'b"owner2-url"'),s(),n("span",{class:"token keyword"},"in"),s(" response"),n("span",{class:"token punctuation"},"."),s(`data
    `),n("span",{class:"token keyword"},"assert"),s(),n("span",{class:"token string"},'b"owner2-avatar-url"'),s(),n("span",{class:"token keyword"},"in"),s(" response"),n("span",{class:"token punctuation"},"."),s(`data


`),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"test_index_no_results"),n("span",{class:"token punctuation"},"("),s("client"),n("span",{class:"token punctuation"},","),s(" app"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    github_client_mock `),n("span",{class:"token operator"},"="),s(" mock"),n("span",{class:"token punctuation"},"."),s("Mock"),n("span",{class:"token punctuation"},"("),s("spec"),n("span",{class:"token operator"},"="),s("Github"),n("span",{class:"token punctuation"},")"),s(`
    github_client_mock`),n("span",{class:"token punctuation"},"."),s("search_repositories"),n("span",{class:"token punctuation"},"."),s("return_value "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(`

    `),n("span",{class:"token keyword"},"with"),s(" app"),n("span",{class:"token punctuation"},"."),s("container"),n("span",{class:"token punctuation"},"."),s("github_client"),n("span",{class:"token punctuation"},"."),s("override"),n("span",{class:"token punctuation"},"("),s("github_client_mock"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        response `),n("span",{class:"token operator"},"="),s(" client"),n("span",{class:"token punctuation"},"."),s("get"),n("span",{class:"token punctuation"},"("),s("url_for"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"index"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`

    `),n("span",{class:"token keyword"},"assert"),s(" response"),n("span",{class:"token punctuation"},"."),s("status_code "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"200"),s(`
    `),n("span",{class:"token keyword"},"assert"),s(),n("span",{class:"token string"},'b"Results found: 0"'),s(),n("span",{class:"token keyword"},"in"),s(" response"),n("span",{class:"token punctuation"},"."),s(`data
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),rn=e(`<p>이제 이것을 실행하고 커버리지를 확인합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>py.test githubnavigator/tests.py <span class="token parameter variable">--cov</span><span class="token operator">=</span>githubnavigator
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>아래와 같이 볼 수 있습니다.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>platform darwin -- Python 3.10.0, pytest-6.2.5, py-1.10.0, pluggy-1.0.0
plugins: cov-3.0.0, flask-1.2.0
collected 2 items

githubnavigator/tests.py ..                                     [100%]

---------- coverage: platform darwin, python 3.10.0-final-0 ----------
Name                             Stmts   Miss  Cover
----------------------------------------------------
githubnavigator/__init__.py          0      0   100%
githubnavigator/application.py      13      0   100%
githubnavigator/containers.py        8      0   100%
githubnavigator/services.py         14      0   100%
githubnavigator/tests.py            34      0   100%
githubnavigator/views.py            10      0   100%
----------------------------------------------------
TOTAL                               79      0   100%
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container note"><p class="hint-container-title">Note</p><p><code>tests.py</code>에서 강조된 부분을 잘 보세요.</p><p><code>Github</code> API 클라이언트를 재정의함을 강조합니다.</p></div><h2 id="conclusion" tabindex="-1"><a class="header-anchor" href="#conclusion" aria-hidden="true">#</a> 결론</h2><p>이번 튜토리얼에서 의존성 주입 이론에 따라 <code>Flask</code> 어플리케이션을 만들었습니다.<br><code>Dependency Injector</code>를 의존성 주입 프레임워크로 사용하였습니다.</p>`,7),dn={href:"https://python-dependency-injector.ets-labs.org/containers/index.html#containers",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://python-dependency-injector.ets-labs.org/providers/configuration.html#configuration-provider",target:"_blank",rel:"noopener noreferrer"},vn=n("code",null,"index()",-1),bn={href:"https://python-dependency-injector.ets-labs.org/wiring.html#wiring",target:"_blank",rel:"noopener noreferrer"},mn=n("br",null,null,-1),gn={href:"https://python-dependency-injector.ets-labs.org/providers/overriding.html#provider-overriding",target:"_blank",rel:"noopener noreferrer"},hn=n("p",null,[s("명시적으로 주입된 모든 의존성을 유지했습니다."),n("br"),s(" 이것은 나중에 무언가를 추가하거나 변경하는데 도움이 될 것입니다.")],-1),yn={href:"https://github.com/ets-labs/python-dependency-injector/tree/master/examples/miniapps/flask",target:"_blank",rel:"noopener noreferrer"};function _n(fn,qn){const t=o("ExternalLinkIcon"),i=o("RouterLink"),l=o("AdsenseB");return u(),r("div",null,[n("p",null,[s("원문: "),n("a",b,[s("https://python-dependency-injector.ets-labs.org/tutorials/flask.html"),a(t)])]),m,n("p",null,[s("전체 프로젝트 내용은 "),n("a",g,[s("깃허브"),a(t)]),s("에서 보실 수 있습니다.")]),h,n("p",null,[s("이제 조금더 이쁘게 만들어보겠습니다."),y,n("a",_,[s("Bootstrap 4"),a(t)]),s("를 사용하겠습니다."),f,s(" 어플리케이션에 이것을 추가하기 위해 "),n("a",q,[s("Bootstrap-Flask"),a(t)]),s(" 확장을 추가하겠습니다."),w,s(" 몇번의 클릭으로 필요한 정적 파일을 추가할 수 있게 도와줍니다.")]),x,j,C,n("p",null,[s("깃허브 API와 통신하기 위하여 "),n("a",S,[s("PyGithub"),a(t)]),s(" 라이브러리를 사용하겠습니다.")]),P,F,G,n("p",null,[s("구성파일을 파싱하기 위해 "),n("a",A,[s("PyYAML"),a(t)]),s(" 라이브러리를 사용할 것 입니다."),I,s(" requirements 파일에 추가하겠습니다.")]),B,N,M,n("div",L,[R,T,n("ul",null,[n("li",null,[n("a",D,[s("깃허브 가이드"),a(t)]),s("를 따라하세요.")]),H])]),E,V,K,O,n("p",null,[W,s("뷰에 "),Y,s("를 주입하겠습니다."),z,s(" 여기서 "),n("a",U,[s("연결"),a(t)]),s("기능을 사용하겠습니다.")]),$,J,Q,X,Z,nn,sn,an,tn,en,on,n("p",null,[n("a",pn,[s("pytest"),a(t)]),s("와 Flask 확장, "),n("a",ln,[s("coverage"),a(t)]),s("를 사용하겠습니다.")]),cn,un,rn,n("p",null,[n("a",dn,[s("컨테이너"),a(t)]),s("와 "),a(i,{to:"/python/dependency-injector/providers/"},{default:d(()=>[s("Provider")]),_:1}),s("는 검색 서비스를 만들고 3자 라이브러리와 통합하는 방법을 지정하는데 도움을 줍니다.")]),n("p",null,[n("a",kn,[s("구성 Provider"),a(t)]),s("는 YAML 파일과 환경변수를 읽고 다루는데 도움을 줍니다.")]),n("p",null,[vn,s(" 뷰에 의존성을 주입하기 위해 "),n("a",bn,[s("연결"),a(t)]),s("기능을 사용하였습니다."),mn,n("a",gn,[s("Provider 재정의"),a(t)]),s("기능은 테스트를 하는데 도움이 됩니다.")]),hn,n("p",null,[s("전체 프로젝트 내용은 "),n("a",yn,[s("깃허브"),a(t)]),s("에서 보실 수 있습니다.")]),a(l)])}const xn=c(v,[["render",_n],["__file","flask.html.vue"]]);export{xn as default};
