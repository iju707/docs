import{_ as d,r as a,o as c,c as u,a as t,b as n,d as e,w as r,e as o}from"./app-95e21c4a.js";const p={},h={href:"https://docs.flutter.dev/get-started/install/windows",target:"_blank",rel:"noopener noreferrer"},_=t("h2",{id:"시스템-요구사항",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#시스템-요구사항","aria-hidden":"true"},"#"),n(" 시스템 요구사항")],-1),b=t("p",null,"Flutter를 설치하고 실행하기 위해서는 아래의 최소요구사항을 만족하는 개발환경을 가지고 있어야합니다.",-1),g=t("li",null,[t("strong",null,"운영체제"),n(" : Windows 10 또는 그 이후버전 (64-bit), x86-64 기반.")],-1),f=t("li",null,[t("strong",null,"디스크 공간"),n(" : 1.64 GB (이것은 IDE/도구에 대한 공간은 제외합니다)")],-1),v=t("strong",null,"도구",-1),k={href:"https://docs.microsoft.com/en-us/powershell/scripting/install/installing-windows-powershell",target:"_blank",rel:"noopener noreferrer"},m={href:"https://git-scm.com/download/win",target:"_blank",rel:"noopener noreferrer"},w=t("strong",null,"Windows 명령창에서 Git을 사용",-1),A=t("p",null,"이미 Git for Windows가 설치되어있다면, git 명령이 명령창이나 PowerShell에서 동작하는지 확인하세요.",-1),S=t("h2",{id:"flutter-sdk-가져오기",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#flutter-sdk-가져오기","aria-hidden":"true"},"#"),n(" Flutter SDK 가져오기")],-1),D=t("p",null,"Flutter SDK의 마지막 안정 릴리즈를 다운받기 위해 아래의 설치번들을 다운로드 하세요.",-1),F={href:"https://storage.googleapis.com/flutter_infra_release/releases/stable/windows/flutter_windows_3.0.5-stable.zip",target:"_blank",rel:"noopener noreferrer"},x={href:"https://docs.flutter.dev/development/tools/sdk/releases",target:"_blank",rel:"noopener noreferrer"},C=t("li",null,[t("p",null,[n("압축을 풀고 포함된 "),t("code",null,"flutter"),n("를 Flutter SDK를 위한 원하는 경로에 위치합니다.(예로들어, "),t("code",null,"C:\\src\\flutter"),n(")")])],-1),K=t("div",{class:"hint-container warning"},[t("p",{class:"hint-container-title"},"Note"),t("p",null,"Flutter를 특수문자나 공백이 포함된 경로에 설치하지 마세요.")],-1),V=t("div",{class:"hint-container warning"},[t("p",{class:"hint-container-title"},"Note"),t("p",null,[n("Flutter를 상위권한이 필요한 "),t("code",null,"C:\\Program Files\\"),n("와 같은데에 설치하지 마세요.")])],-1),W=t("br",null,null,-1),G={href:"https://github.com/flutter/flutter",target:"_blank",rel:"noopener noreferrer"},N=o(`<p>예로들면,</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span>src<span class="token operator">&gt;</span>git clone https://github.com/flutter/flutter.git <span class="token parameter variable">-b</span> stable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>이제 Flutter 콘솔에서 Flutter 명령을 실행할 준비가 되었습니다.</p><h3 id="환경경로-갱신하기" tabindex="-1"><a class="header-anchor" href="#환경경로-갱신하기" aria-hidden="true">#</a> 환경경로 갱신하기</h3><p>일반 Windows 콘솔에서 Flutter 명령을 실행하고 싶으면 Flutter를 <strong>PATH</strong> 환경변수에 추가하는 다음 과정을 수행하시면 됩니다.</p><ul><li>시작의 검색창에서 <code>env</code>를 입력하고 <strong>현재 계정의 환경변수를 수정하기</strong> 선택하시면 됩니다.</li><li><strong>사용자 변수</strong>에서 <strong>Path</strong>라는 엔트리가 있는지 확인합니다. <ul><li>엔트리가 존재한다면, <code>flutter/bin</code> 이 사용하는 전체경로를 기존값에서 ; 로 구분하여 추가합니다.</li><li>엔트리가 없다면, 새로운 <strong>Path</strong> 환경변수를 생성하고 <code>flutter/bin</code>이 사용하는 전체경로를 값으로 추가합니다.</li></ul></li></ul><p>변경된 내용을 적용하기 위해 존재하는 모든 콘솔 윈도우를 닫고 다시 열어주시기 바랍니다.</p>`,7),P={class:"hint-container tip"},B=o(`<p class="hint-container-title">Tips</p><p>Flutter 1.19.0 dev 릴리즈 이상부터 Flutter SDK에 <code>flutter</code>명령과 함께 <code>dart</code>명령이 포함되어 보다 쉽게 Dart 명령줄 프로그램을 실행할 수 있습니다.<br> Flutter SDK를 다운받으면 자동으로 호환되는 Dart를 다운받게 되며, 별도로 Dart SDK를 다운받은 경우 두 버전이 호환되지 않을 수 있으므로 Flutter 버전의 <code>dart</code>가 path에 가장 우선시 되어야 합니다.<br> 아래의 명령은 <code>flutter</code>와 <code>dart</code> 명령이 동일한 <code>bin</code> 디렉터리에 시작하여 호환되는지 여부를 알려줍니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span><span class="token operator">&gt;</span>where flutter dart
C:<span class="token punctuation">\\</span>path-to-flutter-sdk<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>flutter
C:<span class="token punctuation">\\</span>path-to-flutter-sdk<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>flutter.bat
C:<span class="token punctuation">\\</span>path-to-dart-sdk<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>dart.exe        :: this should go after <span class="token variable"><span class="token variable">\`</span>C:<span class="token punctuation">\\</span>path-to-flutter-sdk<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span><span class="token variable">\`</span></span> commands
C:<span class="token punctuation">\\</span>path-to-flutter-sdk<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>dart
C:<span class="token punctuation">\\</span>path-to-flutter-sdk<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>dart.bat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>위 경우에는 Flutter SDK의 <code>dart</code>명령이 처음에 위치하지 않습니다.<br><code>C:\\path-to-flutter-sdk\\bin\\</code>의 명령을 <code>C:\\path-to-dart-sdk\\bin\\</code>의 명령 앞에 오도록 path를 갱신합니다.(위 경우 기준)<br> 변경된 내용을 적용하기 위해 쉘을 재시작하고 <code>where</code>명령을 다시 실행하면 <code>flutter</code>와 동일 디렉터리에 위치한 <code>dart</code>명령이 우선시 됨을 볼 수 있습니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span><span class="token operator">&gt;</span>where flutter dart
C:<span class="token punctuation">\\</span>dev<span class="token punctuation">\\</span>src<span class="token punctuation">\\</span>flutter<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>flutter
C:<span class="token punctuation">\\</span>dev<span class="token punctuation">\\</span>src<span class="token punctuation">\\</span>flutter<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>flutter.bat
C:<span class="token punctuation">\\</span>dev<span class="token punctuation">\\</span>src<span class="token punctuation">\\</span>flutter<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>dart
C:<span class="token punctuation">\\</span>dev<span class="token punctuation">\\</span>src<span class="token punctuation">\\</span>flutter<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>dart.bat
C:<span class="token punctuation">\\</span>dev<span class="token punctuation">\\</span>src<span class="token punctuation">\\</span>dart-sdk<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span>dart.exe
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그러나, <code>PowerShell</code>을 사용한다면 <code>Where-Object</code>명령에 <code>where</code>별칭이 적용되어있지 않으므로 <code>where.exe</code>로 대신 사용해야 합니다.</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">PS</span> C:\\&gt; where<span class="token punctuation">.</span>exe flutter dart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),T=t("code",null,"dart",-1),y=t("code",null,"dart -h",-1),E={href:"https://dart.dev/tools/dart-run",target:"_blank",rel:"noopener noreferrer"},I=o(`<h3 id="flutter-doctor-실행하기" tabindex="-1"><a class="header-anchor" href="#flutter-doctor-실행하기" aria-hidden="true">#</a> <code>flutter doctor</code> 실행하기</h3><p>Flutter 디렉터리를 가지고 있는 상태의 콘솔 윈도우(아래참조)에서 아래 명령을 통해 설치완료를 위한 플랫폼 의존성이 있는지 확인할 수 있습니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span>src<span class="token punctuation">\\</span>flutter<span class="token operator">&gt;</span>flutter doctor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>이 명령어는 환경을 확인하고 Flutter 설치에 대한 상태리포트를 보여줍니다.<br> 출력된 내용에서 추가적으로 설치해야될 소프트웨어나 수행할 행동을 확인하면 됩니다. (굵은글씨 참조)</p><p>예로들면 다음과 같습니다.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[-] Android toolchain - develop for Android devices
    • Android SDK at D:\\Android\\sdk
    ✗ Android SDK is missing command line tools; download from https://goo.gl/XxQghQ
    • Try re-installing or updating your Android SDK,
      visit https://docs.flutter.dev/setup/#android-setup for detailed instructions.
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>아래 절은 이러한 행동을 어떻게 수행하고 설치과정을 마무리하는지 보여줍니다.<br> 누락된 의존성을 설치한 뒤 다시 <code>flutter doctor</code> 명령을 수행하면 모든 것이 정상적으로 되어있는지 검증할 수 있습니다.</p>`,7),L={class:"hint-container tip"},O=t("p",{class:"hint-container-title"},"Tips",-1),M=t("code",null,"flutter doctor",-1),R={class:"hint-container warning"},z=t("p",{class:"hint-container-title"},"Note",-1),H=t("br",null,null,-1),J={href:"https://policies.google.com/terms",target:"_blank",rel:"noopener noreferrer"},U=t("p",null,[n("예로들어, Github를 사용하여 설치한 경우(미리 패키징된 아카이브와는 달리), Flutter 도구는 최초실행시 Dart SDK를 구글서버로부터 다운받아 "),t("code",null,"flutter"),n(" 도구 자체를 실행할때 사용합니다."),t("br"),n(" 이것은 Flutter를 업그레이드 할때도 동일하게 발생합니다.(예로, "),t("code",null,"flutter upgrade"),n(" 명령어를 실행한 경우)")],-1),Q=t("code",null,"flutter",-1),j={href:"https://github.com/flutter/flutter/wiki/Flutter-CLI-crash-reporting",target:"_blank",rel:"noopener noreferrer"},X=t("p",null,[n("Flutter 도구 분석은 최초실행시 전송되지는 않습니다."),t("br"),n(" 보고서를 비활성화하려면, "),t("code",null,"flutter config --no-analytics"),n("를 실행하시면 됩니다."),t("br"),n(" 현재 설정정보를 보려면, "),t("code",null,"flutter config"),n("를 사용하시면 됩니다."),t("br"),n(" 만약 분석 설정을 미사용하게 되면, opt-out(옵션 미사용) 이벤트가 전송되고 이후에는 Flutter 도구를 통해 전송되는 정보는 없습니다.")],-1),q=t("br",null,null,-1),Y={href:"https://dart.dev/tools/dart-tool",target:"_blank",rel:"noopener noreferrer"},Z=t("code",null,"dart tool",-1),$=t("ul",null,[t("li",null,[t("code",null,"--enable-analytics"),n(" : 익명분석 활성화")]),t("li",null,[t("code",null,"--disable-analytics"),n(" : 익명분석 비활성화")])],-1),tt={href:"https://policies.google.com/privacy",target:"_blank",rel:"noopener noreferrer"},nt=o('<h2 id="android-설정" tabindex="-1"><a class="header-anchor" href="#android-설정" aria-hidden="true">#</a> Android 설정</h2><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Flutter는 Android 플랫폼 의존성을 지원하기 위해 Android Studio를 전체설치하도록 되어있습니다.<br> 그러나 다양한 에디터에서 Flutter 어플리케이션을 작성할 수 있으며, 뒤에서 다루도록 하겠습니다.</p></div><h3 id="android-studio-설치하기" tabindex="-1"><a class="header-anchor" href="#android-studio-설치하기" aria-hidden="true">#</a> Android Studio 설치하기</h3>',3),et={href:"https://developer.android.com/studio",target:"_blank",rel:"noopener noreferrer"},st=t("li",null,[n("Android Studio를 시작하고 'Android Studio Setup Wizard'로 이동합니다."),t("br"),n(" Flutter에서 Android를 개발할 때 필요한 가장 최신의 Android SDK, Android SDK 명령줄 도구, Android SDK 빌드도구를 설치합니다.")],-1),ot=t("li",null,[t("code",null,"flutter doctor"),n("를 실행해서 Android Studio 설치가 맞게 되었는지 검증합니다."),t("br"),n(" 만약 Flutter에서 없다고 표시하면, Android Studio가 설치된 디렉터리를 "),t("code",null,"flutter config --android-studio-dir <directory>"),n(" 명령으로 설정합니다.")],-1),at=t("h3",{id:"android-장치-설정하기",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#android-장치-설정하기","aria-hidden":"true"},"#"),n(" Android 장치 설정하기")],-1),lt=t("p",null,"Android 장치에서 Flutter 어플리케이션을 실행하고 테스트할 준비를 위해 Android 4.1 (API level 16) 또는 그 이상이 실행되는 Android 장치가 필요합니다.",-1),rt=t("strong",null,"개발자 옵션",-1),it=t("strong",null,"USB 디버깅",-1),dt=t("br",null,null,-1),ct={href:"https://developer.android.com/studio/debug/dev-options",target:"_blank",rel:"noopener noreferrer"},ut={href:"https://developer.android.com/studio/run/win-usb",target:"_blank",rel:"noopener noreferrer"},pt=t("li",null,[n("USB 케이블을 사용해서 컴퓨터에 핸드폰을 연결합니다."),t("br"),n(" 장치에 확인창이 표시되면 컴퓨터에서 장치접근을 할 수 있도록 권한을 허용합니다.")],-1),ht=t("li",null,[n("터미널에서 "),t("code",null,"flutter devices"),n(" 명령을 실행하여 Flutter가 연결된 Android 장치를 인식하고 있는지 검증합니다."),t("br"),n(" 기본적으로 "),t("code",null,"abd"),n(" 도구에 기반한 Android SDK 버전을 사용합니다."),t("br"),n(" Flutter에서 다른 버전의 Android SDK를 사용하고 싶을 경우 "),t("code",null,"ANDROID_SDK_ROOT"),n(" 환경변수를 해당 SDK가 설치된 경로로 변경설정해야합니다.")],-1),_t=t("h3",{id:"android-에뮬레이터-설정하기",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#android-에뮬레이터-설정하기","aria-hidden":"true"},"#"),n(" Android 에뮬레이터 설정하기")],-1),bt=t("p",null,"Android 에뮬레이터에서 Flutter 어플리케이션을 실행하고 테스트하기 위해서 다음 동작을 따라하세요.",-1),gt={href:"https://developer.android.com/studio/run/emulator-acceleration",target:"_blank",rel:"noopener noreferrer"},ft=o("<li><p><strong>Android Studio</strong>를 실행하고 <strong>AVD Manager</strong> 아이콘을 클릭한 뒤 <strong>Create Virtual Device...</strong> 을 선택합니다.</p><ul><li>오래된 Android Studio의 경우 <strong>Android Studio &gt; 도구 &gt; Android &gt; AVD Manager</strong>를 실행하고 <strong>Create Virtual Device...</strong> 를 선택합니다.<br> (<strong>Android</strong> 하위 메뉴는 Android 프로젝트 내에서만 표출됩니다)</li><li>프로젝트를 열고 있지 않는다면 <strong>Configure &gt; AVD Manager</strong>를 선택하고 <strong>Create Virtual Device...</strong> 를 선택합니다.</li></ul></li><li><p>장치 정의를 선택하고 <strong>Next</strong>를 클릭합니다.</p></li><li><p>에뮬레이팅할 Android 버전의 시스템 이미지 1개 이상을 선택하고 <strong>Next</strong>를 클릭합니다.<br> x86 또는 x86_64 이미지를 추천합니다.</p></li>",3),vt=t("strong",null,"Hardware - GLES 2.0",-1),kt={href:"https://developer.android.com/studio/run/emulator-acceleration",target:"_blank",rel:"noopener noreferrer"},mt=t("p",null,[n("AVD 구성이 정확한지 검증하고 "),t("strong",null,"Finish"),n("를 클릭합니다.")],-1),wt={href:"https://developer.android.com/studio/run/managing-avds",target:"_blank",rel:"noopener noreferrer"},At=t("li",null,[t("p",null,[n("Android 가상장치 관리자에서 툴바의 "),t("strong",null,"Run"),n("을 클릭합니다."),t("br"),n(" 에뮬레이터가 시작되고 선택한 OS 버전 및 장치에 대한 기본 화면이 표시됩니다.")])],-1),St=o(`<h3 id="android-라이선스-동의하기" tabindex="-1"><a class="header-anchor" href="#android-라이선스-동의하기" aria-hidden="true">#</a> Android 라이선스 동의하기</h3><p>Flutter를 사용하기 전에 Android SDK 플랫폼 라이선스를 동의해야 합니다.<br> 이 과정은 아래 나열된 도구가 설치된 후 완료되면 됩니다.</p><ol><li><p>설치된 자바의 버전이 8인지 확인하고 <code>JAVA_HOME</code> 환경변수에 JDK 폴더가 설정되었는지 확인합니다.</p><p>Android Studio 2.2 또는 그 이상의 버전에는 JDK가 포함되어 따로 하실일은 없습니다.</p></li><li><p>열려진 콘솔 윈도우에서 라이선스 동의를 시작하기 위해 아래 명령을 실행합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span>src<span class="token punctuation">\\</span>flutter<span class="token operator">&gt;</span> flutter doctor --android-licenses
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>동의하기전에 각각의 라이선스 규약을 확인해보시기 바랍니다.</p></li><li><p>라이선스에 동의한 경우 <code>flutter doctor</code>를 다시 실행하여 Flutter를 사용할 준비가 완료되었는지 확인합니다.</p></li></ol><h2 id="windows-설정" tabindex="-1"><a class="header-anchor" href="#windows-설정" aria-hidden="true">#</a> Windows 설정</h2><h3 id="추가적인-windows-요구사항" tabindex="-1"><a class="header-anchor" href="#추가적인-windows-요구사항" aria-hidden="true">#</a> 추가적인 Windows 요구사항</h3><p>Windows 데스크탑 개발을 위해 Flutter SDK 외에 다음이 필요합니다.</p>`,6),Dt={href:"https://visualstudio.microsoft.com/downloads/",target:"_blank",rel:"noopener noreferrer"},Ft=t("div",{class:"hint-container tip"},[t("p",{class:"hint-container-title"},"Tips"),t("p",null,[t("strong",null,"Visual Studio"),n("는 Visual Studio Code와 다릅니다.")])],-1),xt={href:"https://docs.flutter.dev/desktop",target:"_blank",rel:"noopener noreferrer"},Ct=t("h2",{id:"web-설정",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#web-설정","aria-hidden":"true"},"#"),n(" Web 설정")],-1),Kt=t("code",null,"stable",-1),Vt=t("br",null,null,-1),Wt=t("br",null,null,-1),Gt=t("h2",{id:"다음단계",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#다음단계","aria-hidden":"true"},"#"),n(" 다음단계")],-1),Nt=t("p",null,"선호하는 에디터를 구성하시면 됩니다.",-1);function Pt(Bt,Tt){const s=a("ExternalLinkIcon"),l=a("RouterLink"),i=a("AdsenseB");return c(),u("div",null,[t("p",null,[n("원문 : "),t("a",h,[n("https://docs.flutter.dev/get-started/install/windows"),e(s)])]),_,b,t("ul",null,[g,f,t("li",null,[v,n(" : Flutter는 윈도우에서 실행되기 위해 아래의 도구를 필요로 합니다. "),t("ul",null,[t("li",null,[t("p",null,[t("a",k,[n("Windows PowerShell 5.0"),e(s)]),n(" 또는 이상 (Windows 10에는 이미 설치되어있습니다)")])]),t("li",null,[t("p",null,[t("a",m,[n("Git for Windows"),e(s)]),n(" 2.x, "),w,n("하기 위한 옵션")]),A])])])]),S,t("ol",null,[t("li",null,[D,t("p",null,[t("a",F,[n("flutter_windows_3.0.5-stable.zip"),e(s)])]),t("p",null,[n("다른 릴리즈나 오래된 빌드버전은 "),t("a",x,[n("SDK releases"),e(s)]),n(" 페이지를 참고하세요.")])]),C]),K,V,t("p",null,[n("고정된 버전의 설치번들로 설치하고 싶지 않을 경우에는 1, 2단계를 생략하시면 됩니다."),W,n(" 대신, Github의 "),t("a",G,[n("Flutter 리포지토리"),e(s)]),n("에서 소스를 받고 필요한 브랜치나 태그로 교체하시면 됩니다.")]),N,t("div",P,[B,t("p",null,[T,n("명령에 대해 알고 싶다면, 명령줄에서 "),y,n("를 실행하거나 "),t("a",E,[n("dart tool"),e(s)]),n("페이지를 확인하세요.")])]),I,t("div",L,[O,t("p",null,[n("만약 "),M,n("가 Flutter 플러그인이나 Dart 플러그인이 Android Studio에 설치되지 않았다고 표시되면, "),e(l,{to:"/flutter/get-started/editor/androidstudio.html"},{default:r(()=>[n("에디터 설정")]),_:1}),n("로 이동해서 이슈를 해결하시면 됩니다.")])]),t("div",R,[z,t("p",null,[n("Flutter 도구는 가끔 구글서버로부터 리소스를 다운받습니다."),H,n(" Flutter SDK를 다운받거나 사용하기 위해서는 "),t("a",J,[n("Google Terms of Service"),e(s)]),n("에 동의해야합니다.")]),U,t("p",null,[Q,n(" 도구는 기능 사용 통계를 보고하거나 "),t("a",j,[n("충돌보고서"),e(s)]),n("를 전송하기 위해 Google Analytics를 사용합니다.")]),X,t("p",null,[n("또한 Dart 도구는 사용량 매트릭스 및 충돌보고서를 구글에 전송합니다."),q,n(" 이런 매트릭스의 제출을 제어하려면, "),t("a",Y,[Z,e(s)]),n("에 아래 옵션을 사용하시면 됩니다.")]),$,t("p",null,[t("a",tt,[n("구글 개인정보보호 정책"),e(s)]),n("에 이러한 서비스에서 데이터를 어떻게 처리하는지 안내되어있습니다.")])]),nt,t("ol",null,[t("li",null,[t("a",et,[n("Android Studio"),e(s)]),n("를 다운받고 설치합니다.")]),st,ot]),at,lt,t("ol",null,[t("li",null,[n("장치에서 "),rt,n("과 "),it,n("을 활성화 합니다."),dt,n(" 자세한 방법은 "),t("a",ct,[n("Android 문서"),e(s)]),n("를 참고하시면 됩니다.")]),t("li",null,[n("Windows일 경우 : "),t("a",ut,[n("Google USB Driver"),e(s)]),n("를 설치합니다.")]),pt,ht]),_t,bt,t("ol",null,[t("li",null,[t("p",null,[n("장치에서 "),t("a",gt,[n("VM 가속화"),e(s)]),n("를 활성화 합니다.")])]),ft,t("li",null,[t("p",null,[n("Emulated Performance 아래 "),vt,n("을 선택하여 "),t("a",kt,[n("장치 가속화"),e(s)]),n("를 활성화 합니다.")])]),t("li",null,[mt,t("p",null,[n("위의 자세한 단계는 "),t("a",wt,[n("AVD 관리하기"),e(s)]),n("를 참고하시면 됩니다.")])]),At]),St,t("ul",null,[t("li",null,[t("a",Dt,[n("Visual Studio 2022"),e(s)]),n(' Visual Studio를 설치할 때 윈도우 빌드를 위해 "Desktop development with C++" 워크로드와 모든 기본 컴포넌트를 포함한 설치가 필요합니다.')])]),Ft,t("p",null,[n("자세한 내용은 "),t("a",xt,[n("Flutter의 Desktop 지원"),e(s)]),n("을 참고하세요.")]),Ct,t("p",null,[n("Flutter는 "),Kt,n("채널에서 웹 어플리케이션 빌드를 지원합니다."),Vt,n(" Flutter 2에서 다른 어플리케이션을 만들면 자동으로 웹으로 빌드가 됩니다."),Wt,n(" 웹이 안정화되기 전에 생성된 어플리케이션에서 웹을 지원하도록 하려면 위에 설정을 모두 마친 뒤 "),e(l,{to:"/flutter/get-started/web.html"},{default:r(()=>[n("Flutter에서 웹 어플리케이션 빌드하기")]),_:1}),n(" 지침을 따라하시면 됩니다.")]),Gt,Nt,e(i)])}const Et=d(p,[["render",Pt],["__file","windows.html.vue"]]);export{Et as default};
