import{_ as a,r,o as t,c as p,a as o,b as e,d as s,w as n,e as c}from"./app-95e21c4a.js";const m={},u=c('<h2 id="compose-v2와-새로운-docker-compose-명령어" tabindex="-1"><a class="header-anchor" href="#compose-v2와-새로운-docker-compose-명령어" aria-hidden="true">#</a> Compose V2와 새로운 <code>docker compose</code> 명령어</h2><blockquote><p><strong>중요</strong></p><p>Docker CLI의 <code>compose</code> 명령으로 지원되는 새로운 Compose V2가 이제 사용가능합니다.<br> Compose V2는 Compose의 기능을 Docker 플랫폼에 포함시켜 통합하였으며, 기존 <code>docker-compose</code>의 기능 및 플래그를 대부분 지원하게 됩니다.<br> 대시(<code>-</code>)를 스페이스로 변경한, <code>docker-compose</code> 대신 <code>docker compose</code>로 실행하여 Compose V2를 테스트 할 수 있습니다.</p></blockquote><p>Docker Desktop 3.4.0에서는 기존 <code>docker-compose</code>를 새로운 명령으로 변경하여 호출을 변경하지 않고 Compose V2 명령을 실행할 수 있습니다.<br> 교체 활성화에 대한 자세한 방법은 <a href="#compose-v2-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0">Compose V2 설치하기</a> 섹션을 함께 보세요.</p><h2 id="docker-compose의-진화된-내용" tabindex="-1"><a class="header-anchor" href="#docker-compose의-진화된-내용" aria-hidden="true">#</a> Docker Compose의 진화된 내용</h2>',4),h={href:"https://github.com/compose-spec/compose-spec",target:"_blank",rel:"noopener noreferrer"},k=o("code",null,"docker-compose",-1),v=o("br",null,null,-1),b=o("code",null,"compose",-1),_=o("a",{href:"/cloud/ecs-integration"},"Amazon ECS",-1),g=o("a",{href:"/cloud/aci-integration"},"Microsoft ACI",-1),C=o("p",null,"Compose 사양이 발전함에 따라, Docker CLI에 새로운 기능이 더 빨리 제공됩니다.",-1),D=o("code",null,"docker-compose",-1),V=o("br",null,null,-1),f=o("br",null,null,-1),x=o("h2",{id:"compose-v2의-ga-전환",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#compose-v2의-ga-전환","aria-hidden":"true"},"#"),e(" Compose V2의 GA 전환")],-1),w=o("p",null,"현재 리눅스에 Compose V2 설치하는 표준방법을 제공하려고 노력하고 있습니다. 이게 가능해지면 Compose V2는 GA(일반사용가능)으로 마킹될 것 입니다.",-1),$=o("p",null,[o("strong",null,"Compose V2 GA"),e(" 의미:")],-1),E=c('<li>새로운 기능과 버그 수정은 Compose V2 코드기반에서만 고려될 예정입니다.</li><li>맥과 윈도우의 Docker Desktop에서 Docker Compose V2가 기본설정이 될 것 입니다. Docker Desktop UI나 CLI에서 여전히 옵션변경이 가능합니다. 이 의미는, <code>docker-compose</code>명령을 실행해도 실제는 <code>docker compose</code>를 실행하게 됩니다.</li><li>Compose V2가 Docker CLI의 최신버전에 포함될 것 입니다. <a href="#compose-switch">Compose Switch</a>를 사용하면 <code>docker-compose</code>에서 <code>docker compose</code>로 리다이렉트됩니다.</li>',3),I={href:"https://github.com/docker/compose/tree/v2",target:"_blank",rel:"noopener noreferrer"},L=o("li",null,"Docker Compose V1는 보안적 이슈를 해결하도록 유지보수 될 것 입니다.",-1),O=c("<p><strong>중요</strong></p><p>우리는 가급적 모든 사용자들에게 가능하도록 Compose V2 변경을 부드럽게 만들고자 합니다.<br> 현재는 Compose V1을 더이상 사용하지 않을 계획은 가지고 있지 않습니다.<br> GA와 리눅스에 채택된 커뮤니티에서 피드백을 리뷰하고나서 Compose V1을 비활성화할 계획을 수립할 것 입니다.<br><code>docker-compose</code>에서 <code>docker compose</code>로의 별칭을 삭제할 계획은 없습니다.<br> 이것은 사용자들이 현재 가지고 있는 스크립트를 변경하지 않고 V2로의 전환을 쉽게 만들기 때문입니다.<br> 우리는 V1에 대한 비활성화 및 보안이슈에 대한 지원정책의 종료를 충분한 시간계획하에 상세한 정보를 가지고 블로그 포스트에 게시할 예정입니다.</p>",2),A={href:"https://github.com/docker/roadmap/issues/257",target:"_blank",rel:"noopener noreferrer"},G=c('<h2 id="compose-v2-설치하기" tabindex="-1"><a class="header-anchor" href="#compose-v2-설치하기" aria-hidden="true">#</a> Compose V2 설치하기</h2><p>이번 섹션은 Compose V2 설치에 대한 지침을 포함하고 있습니다.</p><h3 id="맥과-윈도우에-설치하기" tabindex="-1"><a class="header-anchor" href="#맥과-윈도우에-설치하기" aria-hidden="true">#</a> 맥과 윈도우에 설치하기</h3><p>맥과 윈도우의 Docker Desktop 버전 3.2.1 이상에는 새로운 Compose 명령이 Docker CLI에 포함되어있습니다.<br> 그래서 윈도우와 맥 사용자는 Compose V2를 별도로 설치할 필요는 없습니다.</p><p>Docker Desktop 사용자에게 자동으로 Docker Compose V2를 점진적으로 변경하도록 하였습니다.<br> 그래서 스크립트의 변경이 따로 필요하지 않고 Docker Compose V2로 순조롭게 이동할 수 있습니다.<br> Compoes V2에 문제가 발생한다면 Docker Desktop 또는 CLI에서 간단하게 Compose V1으로 변경할 수 있습니다.</p><p>Docker Desktop 설치관련 명령은 다음을 참고하세요.</p>',6),N=c(`<p>Docker Desktop 사용하여 Compose V2 비활성화 하려면 다음 동작을 하면 됩니다.</p><ol><li>Docker 메뉴에서 <strong>속성(Preferences)</strong> (윈도우에서는 <strong>설정(Settings)</strong> &gt; <strong>일반(General)</strong> 을 클릭합니다.</li><li><strong>Docker Compose V2 사용(Use Docker Compose V2)</strong> 체크박스를 해지합니다.</li></ol><p>CLI 사용하여 Compose V2를 비활성화 하려면 다음 명령을 입력하면 됩니다.</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>$ docker-compose disable-v2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="리눅스에서-설치하기" tabindex="-1"><a class="header-anchor" href="#리눅스에서-설치하기" aria-hidden="true">#</a> 리눅스에서 설치하기</h3>`,5),R={href:"https://github.com/docker/compose/releases",target:"_blank",rel:"noopener noreferrer"},S=o("code",null,"$HOME/.docker/cli-plugins",-1),B=o("code",null,"docker-compose",-1),K=c(`<ol><li><p>아래 명령으로 Docker Compose의 현재 안정버전을 다운받을 수 있습니다.</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>$ DOCKER_CONFIG=\${DOCKER_CONFIG:-$HOME/.docker}
$ mkdir -p $DOCKER_CONFIG/cli-plugins
$ curl -SL https://github.com/docker/compose/releases/download/v1.28.4/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이 명령은 현재 활성 사용자의 <code>$HOME</code> 디렉터리에 Compose V2를 설치합니다. 모든 사용자에 대한 설치를 하는 경우 <code>~/.docker/cli-plugins</code>를 <code>/use/local/lib/docker/cli-plugins</code>로 변경하면 됩니다.</p></li><li><p>바이너리에 실행가능 권한을 추가합니다.</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>$ chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>설치된 내용을 확인합니다.</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>$ docker compose version
Docker Compose version 1.28.4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="compose-switch" tabindex="-1"><a class="header-anchor" href="#compose-switch" aria-hidden="true">#</a> Compose Switch</h3>`,2),M={href:"https://github.com/docker/compose-switch/",target:"_blank",rel:"noopener noreferrer"},y=o("code",null,"docker-compose",-1),F=o("br",null,null,-1),P=o("code",null,"docker compose",-1),H=c(`<p>자동으로 Compose Switch를 설치하려면 다음을 실행합니다.</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>$ curl -fL https://raw.githubusercontent.com/docker/compose-switch/master/install_on_linux.sh | sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>수동으로 설치하려면 다음을 수행합니다.</p><ol><li><p>시스템에 맞는 <code>compose-switch</code>를 다운받습니다.</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>$ curl -fL https://github.com/docker/compose-switch/releases/download/v1.28.4/docker-compose-linux-amd64 -o /usr/local/bin/compose-switch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>실행파일로 변경하기 위해 아래 명령을 실행합니다.</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>$ chmod +x /usr/local/bin/compose-switch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>기존 <code>/use/local/bin/docker-compose</code>와 같이 설치된 <code>docker-compose</code>를 삭제합니다.</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>$ mv /usr/local/bin/docker-compose /usr/local/bin/docker-compose-v1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>docker-compose</code> 명령어에 대한 <strong>alternatives</strong> 그룹을 정의합니다.</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>$ update-alternatives --install /usr/local/bin/docker-compose docker-compose &lt;PATH_TO_DOCKER_COMPOSE_V1&gt; 1
$ update-alternatives --install /usr/local/bin/docker-compose docker-compose /usr/local/bin/compose-switch 99
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>설치된 내용을 확인합니다.</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>$ update-alternatives --display docker-compose
docker-compose - auto mode
    link best version is /usr/local/bin/compose-switch
    link currently points to /usr/local/bin/compose-switch
    link docker-compose is /usr/local/bin/docker-compose
/usr/bin/docker-compose - priority 1
/usr/local/bin/compose-switch - priority 99
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="docker-compose-설치제거하기" tabindex="-1"><a class="header-anchor" href="#docker-compose-설치제거하기" aria-hidden="true">#</a> Docker Compose 설치제거하기</h4><p>curl을 사용하여 Docker Compose를 설치했다면, 다음명령으로 설치제거할 수 있습니다.</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>$ sudo rm ~/.docker/cli-plugins/docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7);function q(T,U){const d=r("ExternalLinkIcon"),l=r("RouterLink"),i=r("AdsenseB");return t(),p("div",null,[u,o("p",null,[o("a",h,[e("Compose 사양"),s(d)]),e("의 소개에서 Compose YAML 파일 모델과 "),k,e("구현에 대한 차이를 명확하게 구별해줍니다."),v,e(" 이러한 변경으로 "),b,e(' 명령이 Docker CLI에 직접 추가되고 단순히 Dokcer 컨텍스트를 전환하여 Compose 어플리케이션을 클라우드 플랫폼에 "up" 시키고 '),_,e("와 "),g,e("에 출시할수 있게하는 등의 다양한 개선이 되었습니다.")]),C,o("p",null,[D,e("가 계속 지원되고 유지보수될때까지는 Compose V2 구현은 Compose의 방향 중 일부 사양으로 직접 포함되어 진행될 것 입니다."),V,e(" 이를 통해 커뮤니티 제안, Docker CLI 및/또는 엔진에 의한 실험적 구현을 포함하고 사용자에게 더 빠르게 기능을 제공할 수 있습니다."),f,e(" 또한 "),s(l,{to:"/docker/compose/profiles.html"},{default:n(()=>[e("profiles")]),_:1}),e("와 "),s(l,{to:"/docker/compose/gpu-support.html"},{default:n(()=>[e("GPU")]),_:1}),e(" 장치 같은 새로 추가된 Compose 사양의 일부를 지원합니다.")]),o("p",null,[e("게다가, Compose V2는 "),s(l,{to:"/docker/desktop/mac/apple-silicon.html"},{default:n(()=>[e("Apple silicon")]),_:1}),e("을 지원합니다.")]),o("p",null,[e("새로운 Compose 명령에 지원되는 플래그 관련 추가적 정보는 "),s(l,{to:"/docker/compose/cli-command-compatibility.html"},{default:n(()=>[e("docker-compose 호환성 목록")]),_:1}),e("를 참고하세요.")]),x,w,$,o("ul",null,[E,o("li",null,[o("a",I,[e("Compose V2 브랜치"),s(d)]),e("가 기본 브랜치로 변경됩니다.")]),L]),o("blockquote",null,[O,o("p",null,[e("당신의 피드백은 우리에게 정말 중요합니다. "),o("a",A,[e("Public Roadmap"),s(d)]),e("에 연락 및 피드백을 부탁드립니다.")])]),G,o("ul",null,[o("li",null,[s(l,{to:"/docker/desktop/mac/install.html"},{default:n(()=>[e("맥에 Docker Desktop 설치하기")]),_:1})]),o("li",null,[s(l,{to:"/docker/desktop/windows/install.html"},{default:n(()=>[e("윈도우에 Docker Desktop 설치하기")]),_:1})])]),N,o("p",null,[e("Compose V2를 설치하려면 "),o("a",R,[e("프로젝트 릴리즈 페이지"),s(d)]),e("에서 현재 시스템에 맞는 바이너리를 다운받고 "),S,e("에 "),B,e(" 이름으로 복사합니다.")]),K,o("p",null,[o("a",M,[e("Compose Switch"),s(d)]),e("는 Compose V1 "),y,e("(파이썬) 실행파일을 대체합니다."),F,e(" Compose switch는 명령어를 Compose V2 "),P,e("로 번역하고 다음 실행합니다.")]),H,s(i)])}const Y=a(m,[["render",q],["__file","cli-command.html.vue"]]);export{Y as default};
