import{_ as i,r as o,o as d,c,a as e,b as n,d as t,w as u,e as l}from"./app-95e21c4a.js";const p="/assets/xcode-account-6ca2348b.png",h="/assets/trust-computer-0342d284.png",_="/assets/xcode-unique-bundle-id-baab1386.png",b={},g={href:"https://docs.flutter.dev/get-started/install/macos",target:"_blank",rel:"noopener noreferrer"},m=e("h2",{id:"시스템-요구사항",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#시스템-요구사항","aria-hidden":"true"},"#"),n(" 시스템 요구사항")],-1),v=e("p",null,"Flutter를 설치하고 실행하기 위해 아래의 최소 요구사항을 가진 개발환경이 필요합니다.",-1),f=e("li",null,[e("strong",null,"운영체제"),n(" : macOS")],-1),A=e("li",null,[e("strong",null,"디스크 공간"),n(" : 2.8 GB (IDE/도구를 포함하지 않습니다)")],-1),k=e("strong",null,"도구",-1),x=e("code",null,"git",-1),S=e("code",null,"git",-1),D={href:"https://developer.apple.com/xcode/",target:"_blank",rel:"noopener noreferrer"},F=e("br",null,null,-1),E={href:"https://git-scm.com/download/mac",target:"_blank",rel:"noopener noreferrer"},B={class:"hint-container warning"},O=e("p",{class:"hint-container-title"},"중요",-1),T={href:"https://support.apple.com/en-us/HT211814",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/flutter/website/pull/7119#issuecomment-1124537969",target:"_blank",rel:"noopener noreferrer"},w=e("br",null,null,-1),K=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> softwareupdate --install-rosetta --agree-to-license
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),X=e("h2",{id:"flutter-sdk-가져오기",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#flutter-sdk-가져오기","aria-hidden":"true"},"#"),n(" Flutter SDK 가져오기")],-1),C=e("p",null,"Flutter SDK의 마지막 안정 릴리즈를 다운받기 위해 아래의 설치번들을 다운로드 하세요.",-1),H=e("strong",null,"인텔",-1),y={href:"https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_3.0.5-stable.zip",target:"_blank",rel:"noopener noreferrer"},P=e("strong",null,"애플 실리콘",-1),R={href:"https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_arm64_3.0.5-stable.zip",target:"_blank",rel:"noopener noreferrer"},M={href:"https://docs.flutter.dev/development/tools/sdk/releases",target:"_blank",rel:"noopener noreferrer"},I={class:"hint-container tip"},V=e("p",{class:"hint-container-title"},"Tips",-1),z={href:"https://support.apple.com/en-us/HT211814",target:"_blank",rel:"noopener noreferrer"},G=l(`<li><p>다음과 같이 원하는 위치에 파일을 압축해지 합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> ~/development
$ <span class="token function">unzip</span> ~/Downloads/flutter_macos_3.0.5-stable.zip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>flutter</code> 도구를 환경경로에 추가합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;<span class="token environment constant">$PATH</span>:<span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/flutter/bin&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>이 명령은 현재의 터미널 윈도우에서만 <code>PATH</code> 변수를 설정합니다.<br> 영구적으로 환경변수에 Flutter를 추가하려면 <a href="#%ED%99%98%EA%B2%BD%EA%B2%BD%EB%A1%9C-%EA%B0%B1%EC%8B%A0%ED%95%98%EA%B8%B0">환경경로 갱신하기</a>를 참고하세요.</p></li>`,2),L=e("p",null,"이제 Flutter 명령을 실행할 준비가 되었습니다.",-1),N={class:"hint-container tip"},q=e("p",{class:"hint-container-title"},"Tips",-1),U={href:"https://docs.flutter.dev/development/tools/sdk/upgrading",target:"_blank",rel:"noopener noreferrer"},W=l(`<h3 id="flutter-doctor-실행하기" tabindex="-1"><a class="header-anchor" href="#flutter-doctor-실행하기" aria-hidden="true">#</a> <code>flutter doctor</code> 실행하기</h3><p>모든 설정을 완료하기위해 설치가 필요한 다른 의존성이 있는지 확인하기 위해 아래 명령을 실행하시면 됩니다. (상세정보 출력은 <code>-v</code> 플래그를 추가하세요)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ flutter doctor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>이 명령은 환경을 검증하고 터미널윈도우에 보고서를 출력해줍니다.<br> Dart SDK는 Flutter의 번들로 포함되어있습니다.<br> 따로 Dart를 별도로 설치할 필요는 없습니다.<br> 다른 소프트웨어를 설치해야하거나 수행할 작업들이 있을 수 있으니 출력된 내용을 주의깊게 살펴보시기 바랍니다. (<strong>굵은글씨</strong>로 표시됩니다)</p><p>예는 다음과 같습니다.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[-] Android toolchain - develop for Android devices
    • Android SDK at /Users/obiwan/Library/Android/sdk
    ✗ Android SDK is missing command line tools; download from https://goo.gl/XxQghQ
    • Try re-installing or updating your Android SDK,
      visit https://docs.flutter.dev/setup/#android-setup for detailed instructions.
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>아래 절은 이러한 행동을 어떻게 수행하고 설치과정을 마무리하는지 보여줍니다.</p><p>누락된 의존성을 설치한 뒤 다시 <code>flutter doctor</code> 명령을 수행하면 모든 것이 정상적으로 되어있는지 검증할 수 있습니다.</p><h3 id="아카이브-외에-github에서-직접-다운로드하기" tabindex="-1"><a class="header-anchor" href="#아카이브-외에-github에서-직접-다운로드하기" aria-hidden="true">#</a> 아카이브 외에 Github에서 직접 다운로드하기</h3><p><em>고급 사용사례에서만 권장됩니다</em></p><p>준비된 아카이브를 다운로드하지 않고 직접 git을 사용할 수 있습니다.<br> 예로들어, 안정브랜치에서 다운로드 하려면 다음과 같습니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> clone https://github.com/flutter/flutter.git <span class="token parameter variable">-b</span> stable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#%ED%99%98%EA%B2%BD%EA%B2%BD%EB%A1%9C-%EA%B0%B1%EC%8B%A0%ED%95%98%EA%B8%B0">환경경로를 갱신하고</a> <code>flutter doctor</code>를 실행합니다.<br> Flutter를 사용하기 위해 설치가 필요한 다른 의존성을 확인할 수 있습니다. (예, Android SDK)</p><p>아카이브를 사용하지 않으면 Flutter는 필요한 개발 바이너리를 다운받을 수도 있습니다. (아카이브 사용시 포함됨)<br> 개발 바이너리가 사전에 다운되어야 하는 경우도 있을 것 입니다. (예를들어, 폐쇄형 빌드환경, 간헐적 네트워크 가용성이 보장된 경우 이작업이 필요할 것 입니다)<br> 아래의 명령으로 가능합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ flutter precache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>추가적인 다운로드 옵션은 <code>flutter help precache</code> 명령으로 확인하세요.</p>`,16),J={class:"hint-container warning"},Q=e("p",{class:"hint-container-title"},"Note",-1),Y=e("br",null,null,-1),Z={href:"https://policies.google.com/terms",target:"_blank",rel:"noopener noreferrer"},j=e("p",null,[n("예로들어, Github를 사용하여 설치한 경우(미리 패키징된 아카이브와는 달리), Flutter 도구는 최초실행시 Dart SDK를 구글서버로부터 다운받아 "),e("code",null,"flutter"),n(" 도구 자체를 실행할때 사용합니다."),e("br"),n(" 이것은 Flutter를 업그레이드 할때도 동일하게 발생합니다.(예로, "),e("code",null,"flutter upgrade"),n(" 명령어를 실행한 경우)")],-1),ee=e("code",null,"flutter",-1),ne={href:"https://github.com/flutter/flutter/wiki/Flutter-CLI-crash-reporting",target:"_blank",rel:"noopener noreferrer"},te=e("p",null,[n("Flutter 도구 분석은 최초실행시 전송되지는 않습니다."),e("br"),n(" 보고서를 비활성화하려면, "),e("code",null,"flutter config --no-analytics"),n("를 실행하시면 됩니다."),e("br"),n(" 현재 설정정보를 보려면, "),e("code",null,"flutter config"),n("를 사용하시면 됩니다."),e("br"),n(" 만약 분석 설정을 미사용하게 되면, opt-out(옵션 미사용) 이벤트가 전송되고 이후에는 Flutter 도구를 통해 전송되는 정보는 없습니다.")],-1),se=e("br",null,null,-1),le={href:"https://dart.dev/tools/dart-tool",target:"_blank",rel:"noopener noreferrer"},oe=e("code",null,"dart tool",-1),re=e("ul",null,[e("li",null,[e("code",null,"--enable-analytics"),n(" : 익명분석 활성화")]),e("li",null,[e("code",null,"--disable-analytics"),n(" : 익명분석 비활성화")])],-1),ae={href:"https://policies.google.com/privacy",target:"_blank",rel:"noopener noreferrer"},ie=l(`<h3 id="환경경로-갱신하기" tabindex="-1"><a class="header-anchor" href="#환경경로-갱신하기" aria-hidden="true">#</a> 환경경로 갱신하기</h3><p><a href="#flutter-sdk-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0">Flutter SDK 가져오기</a>에서 보셨듯 명령줄에서 현재 세션의 PATH 변수를 갱신할 수 있습니다.<br> 영구적으로 변수를 갱신할 경우 어떤 터미널 세션이던 <code>flutter</code> 명령을 실행할 수 있습니다.</p><p>모든 터미널 세션에서 변수를 영구적으로 수정하는 단계는 시스템마다 상이합니다.<br> 일반적으로 새로운 윈도우가 실행될 때 수행되는 파일에 줄을 추가하는 것 입니다.<br> 예로들면,</p><ol><li><p>Flutter SDK 복제본의 경로를 결정합니다. 이것은 단계 3에 필요합니다.</p></li><li><p>쉘의 <code>rc</code> 파일을 엽니다(또는 생성).<br> 터미널에서 <code>echo $SHELL</code>을 입력하면 사용하는 쉘이 어떤 것인지 알려줍니다.<br> 만약 Bash를 사용하고 있으면 <code>$HOME/.bash_profile</code> 또는 <code>$HOME/.bashrc</code>를 수정합니다.<br> Z 쉘을 사용할 경우 <code>$HOME/.zshrc</code>를 수정합니다.<br> 다른 쉘을 사용할 경우에는 장치마다 파일 경로 및 이름이 다를 것 입니다.</p></li><li><p>아래의 줄을 추가하고 <code>[PATH_OF_FLUTTER_GIT_DIRECTORY]</code>를 Flutter 깃 저장소의 복제본 경로로 변경하면 됩니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;<span class="token environment constant">$PATH</span>:[PATH_OF_FLUTTER_GIT_DIRECTORY]/bin&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>현재 윈도우에서 <code>source $HOME/.&lt;rc file&gt;</code>을 실행하여 갱신하거나, 소스 파일이 자동으로 적용되도록 새로운 터미널 윈도우를 엽니다.</p></li><li><p>다음을 실행해서 PATH에 <code>flutter/bin</code> 디렉터리가 있는지 확인합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">echo</span> <span class="token environment constant">$PATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>다음을 실행해서 flutter 명령이 가능한지 확인합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">which</span> flutter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="플랫폼-설정" tabindex="-1"><a class="header-anchor" href="#플랫폼-설정" aria-hidden="true">#</a> 플랫폼 설정</h2><p>macOS는 iOS, Android, 웹에서 Flutter 앱을 개발할 수 있게 지원합니다.<br> 첫번째 Flutter 앱을 빌드하고 실행하기 위하여 적어도 1개의 플랫폼 설정을 지금 완료하시기 바랍니다.</p><h2 id="ios-설정" tabindex="-1"><a class="header-anchor" href="#ios-설정" aria-hidden="true">#</a> iOS 설정</h2><h3 id="xcode-설치하기" tabindex="-1"><a class="header-anchor" href="#xcode-설치하기" aria-hidden="true">#</a> Xcode 설치하기</h3><p>iOS용 Flutter 앱을 개발하려면 Xcode가 설치된 Mac이 필요합니다.</p>`,9),de={href:"https://developer.apple.com/xcode/",target:"_blank",rel:"noopener noreferrer"},ce={href:"https://itunes.apple.com/us/app/xcode/id497799835",target:"_blank",rel:"noopener noreferrer"},ue=l(`<li><p>명령줄에서 아래를 실행하여 새로 설치된 버전의 Xcode를 사용하기 위해 Xcode 명령줄 도구를 구성합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> xcode-select <span class="token parameter variable">--switch</span> /Applications/Xcode.app/Contents/Developer
$ <span class="token function">sudo</span> xcodebuild <span class="token parameter variable">-runFirstLaunch</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Xcode의 마지막 버전을 사용하고 있다면 대부분의 경우 위 경로가 맞을 것 입니다.<br> 만약 다른 버전을 사용하고 있다면 그것에 맞게 경로를 변경하면 됩니다.</p></li><li><p>Xcode 라이선스 동의를 하기 위하여 Xcode를 한번 실행한뒤 동의하거나 명령줄에서 <code>sudo xcodebuild -license</code>를 실행합니다.</p></li>`,2),pe=l(`<p>마지막 안정버전보다 오래된 버전을 사용해도 무방하나 Flutter 개발에는 권장드리지 않습니다.<br> 오래된 버전의 Xcode를 비트코드로 지정하여 사용하는 것이 지원되지 않거나 동작하지 않을 수 있습니다.</p><p>Xcode가 설치되면 iOS 장치나 시뮬레이터로 Flutter 앱을 실행할 수 있습니다.</p><h3 id="ios-시뮬레이터-설정하기" tabindex="-1"><a class="header-anchor" href="#ios-시뮬레이터-설정하기" aria-hidden="true">#</a> iOS 시뮬레이터 설정하기</h3><p>iOS 시뮬레이터로 Flutter 앱을 실행하고 테스트하려면 다음 단계를 따르세요.</p><ol><li><p>Mac에서 Spotlight 또는 아래 명령으로 Simulator를 찾습니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">open</span> <span class="token parameter variable">-a</span> Simulator
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>시뮬레이터가 64비트 장치(iPhone 5s 이후)를 사용하는지 확인하세요.<br> 시뮬레이터의 <strong>Hardware &gt; Device</strong>나 <strong>File &gt; Open Simulator</strong> 메뉴에서 장치의 설정을 확인할 수 있습니다.</p></li><li><p>개발하는 장비의 화면사이즈에 따라 시뮬레이팅된 고해상도 iOS 장치가 화면을 넘어갈 수 있습니다.<br> 시뮬레이터의 가장자리를 잡고 드래그하여 비율을 조정할 수 있습니다.<br> 또한 화면이 충분히 크다면 <strong>Window &gt; Physical Size</strong> 또는 <strong>Window &gt; Pixel Accurate</strong> 옵션을 사용할 수 있습니다.</p><ul><li>Xcode 9.1 보다 오래된 버전을 사용한다면 <strong>Window &gt; Scale</strong> 메뉴에서 device scale을 설정해야 합니다.</li></ul></li></ol><h3 id="단순-flutter-앱-생성-및-실행하기" tabindex="-1"><a class="header-anchor" href="#단순-flutter-앱-생성-및-실행하기" aria-hidden="true">#</a> 단순 Flutter 앱 생성 및 실행하기</h3><p>구성된 것에 Flutter 앱을 생성하고 테스트 하려면 다음 단계를 따르세요.</p><ol><li><p>명령줄에서 아래 명령을 실행하여 Flutter 앱을 생성합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ flutter create my_app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>my_app</code> 디렉터리가 생성되며 Flutter 시작 앱을 포함하고 있습니다. 해당 디렉터리로 이동합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> my_app
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>시뮬레이터에서 앱을 시작하기위해 시뮬레이터를 실행하고 다음을 입력합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ flutter run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="ios-장치에-배포하기" tabindex="-1"><a class="header-anchor" href="#ios-장치에-배포하기" aria-hidden="true">#</a> iOS 장치에 배포하기</h3><p>Flutter 앱을 실제 iOS 장치에 배포하려면 Xcode에서 물리장치배포와 애플 개발자 계정을 구성해야합니다.<br> 앱이 Flutter 플러그인을 사용한다면 CocoaPods 3자의존성관리자가 필요합니다.</p>`,10),he={href:"https://docs.flutter.dev/development/packages-and-plugins/developing-packages#types",target:"_blank",rel:"noopener noreferrer"},_e=e("br",null,null,-1),be={href:"https://guides.cocoapods.org/using/getting-started.html#installation",target:"_blank",rel:"noopener noreferrer"},ge=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> gem <span class="token function">install</span> cocoapods
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),me={class:"hint-container tip"},ve=e("p",{class:"hint-container-title"},"Tips",-1),fe=e("p",null,[n("Ruby의 기본버전은 CocoaPods 젬을 설치하기 위해 "),e("code",null,"sudo"),n("를 요구합니다."),e("br"),n(" 만약 Ruby 버전관리자를 사용한다면 "),e("code",null,"sudo"),n("없이 실행 할 수 있습니다.")],-1),Ae={href:"https://support.apple.com/en-us/HT211814",target:"_blank",rel:"noopener noreferrer"},ke=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> gem uninstall ffi <span class="token operator">&amp;&amp;</span> <span class="token function">sudo</span> gem <span class="token function">install</span> ffi -- --enable-libffi-alloc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),xe=e("p",null,"Xcode 서명 흐름을 따라 프로젝트를 프로비저닝합니다.",-1),Se=e("li",null,[n("Flutter 프로젝트 디렉터리에서 터미널 윈도우를 열고 "),e("code",null,"open ios/Runner .xcworkspace"),n("를 실행하여 프로젝트의 Xcode 워크스페이스를 엽니다.")],-1),De=e("li",null,"run 버튼 옆에 있는 device 드롭다운메뉴에서 배포하려는 장치를 선택합니다.",-1),Fe=e("li",null,[n("왼쪽 탐색패널에서 "),e("code",null,"Runner"),n(" 프로젝트를 선택합니다.")],-1),Ee=e("code",null,"Runner",-1),Be=e("strong",null,"Signing & Capabilities > Team",-1),Oe=e("br",null,null,-1),Te=e("br",null,null,-1),$e=e("br",null,null,-1),we=e("br",null,null,-1),Ke={href:"https://developer.apple.com/support/compare-memberships",target:"_blank",rel:"noopener noreferrer"},Xe=e("p",null,[e("img",{src:p,alt:"xcode-account",loading:"lazy"})],-1),Ce=l('<li><p>iOS 개발에 연결된 물리장치를 처음 사용할때 장치에서 Mac과 개발인증을 신뢰해야합니다.<br> iOS 장치에서 Mac으로 처음 접속할 때 팝업에서 <code>Trust</code>를 선택합니다.<br> 그리고나서 iOS 장치에서 설정 앱으로 이동한뒤 <strong>General &gt; Device Management</strong>를 선택하고 인증을 신뢰합니다.<br> 최초 사용자의 경우 <strong>General &gt; Profiles &gt; Device Management</strong>를 대신 선택해야합니다.</p><p><img src="'+h+'" alt="trust-computer" loading="lazy"></p></li><li><p>Xcode에서 자동 서명이 실패할 경우 프로젝트의 <strong>General &gt; Identity &gt; Bundle Identifier</strong>가 유니크한지 확인하시기 바랍니다.</p><p><img src="'+_+'" alt="xcode-unique-bundle-id" loading="lazy"></p></li>',2),He=e("li",null,[e("p",null,[e("code",null,"flutter run"),n("을 실행하거나 Xcode에서 Run 버튼을 클릭하여 앱을 시작합니다.")])],-1),ye=l('<h2 id="android-설정" tabindex="-1"><a class="header-anchor" href="#android-설정" aria-hidden="true">#</a> Android 설정</h2><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Flutter는 Android 플랫폼 의존성을 지원하기 위해 Android Studio를 전체설치하도록 되어있습니다.<br> 그러나 다양한 에디터에서 Flutter 어플리케이션을 작성할 수 있으며, 뒤에서 다루도록 하겠습니다.</p></div><h3 id="android-studio-설치하기" tabindex="-1"><a class="header-anchor" href="#android-studio-설치하기" aria-hidden="true">#</a> Android Studio 설치하기</h3>',3),Pe={href:"https://developer.android.com/studio",target:"_blank",rel:"noopener noreferrer"},Re=e("li",null,[n("Android Studio를 시작하고 'Android Studio Setup Wizard'로 이동합니다."),e("br"),n(" Flutter에서 Android를 개발할 때 필요한 가장 최신의 Android SDK, Android SDK 명령줄 도구, Android SDK 빌드도구를 설치합니다.")],-1),Me=e("li",null,[e("code",null,"flutter doctor"),n("를 실행해서 Android Studio 설치가 맞게 되었는지 검증합니다."),e("br"),n(" 만약 Flutter에서 없다고 표시하면, Android Studio가 설치된 디렉터리를 "),e("code",null,"flutter config --android-studio-dir <directory>"),n(" 명령으로 설정합니다.")],-1),Ie=e("h3",{id:"android-장치-설정하기",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#android-장치-설정하기","aria-hidden":"true"},"#"),n(" Android 장치 설정하기")],-1),Ve=e("p",null,"Android 장치에서 Flutter 어플리케이션을 실행하고 테스트할 준비를 위해 Android 4.1 (API level 16) 또는 그 이상이 실행되는 Android 장치가 필요합니다.",-1),ze=e("strong",null,"개발자 옵션",-1),Ge=e("strong",null,"USB 디버깅",-1),Le=e("br",null,null,-1),Ne={href:"https://developer.android.com/studio/debug/dev-options",target:"_blank",rel:"noopener noreferrer"},qe={href:"https://developer.android.com/studio/run/win-usb",target:"_blank",rel:"noopener noreferrer"},Ue=e("li",null,[n("USB 케이블을 사용해서 컴퓨터에 핸드폰을 연결합니다."),e("br"),n(" 장치에 확인창이 표시되면 컴퓨터에서 장치접근을 할 수 있도록 권한을 허용합니다.")],-1),We=e("li",null,[n("터미널에서 "),e("code",null,"flutter devices"),n(" 명령을 실행하여 Flutter가 연결된 Android 장치를 인식하고 있는지 검증합니다."),e("br"),n(" 기본적으로 "),e("code",null,"abd"),n(" 도구에 기반한 Android SDK 버전을 사용합니다."),e("br"),n(" Flutter에서 다른 버전의 Android SDK를 사용하고 싶을 경우 "),e("code",null,"ANDROID_SDK_ROOT"),n(" 환경변수를 해당 SDK가 설치된 경로로 변경설정해야합니다.")],-1),Je=e("h3",{id:"android-에뮬레이터-설정하기",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#android-에뮬레이터-설정하기","aria-hidden":"true"},"#"),n(" Android 에뮬레이터 설정하기")],-1),Qe=e("p",null,"Android 에뮬레이터에서 Flutter 어플리케이션을 실행하고 테스트하기 위해서 다음 동작을 따라하세요.",-1),Ye={href:"https://developer.android.com/studio/run/emulator-acceleration",target:"_blank",rel:"noopener noreferrer"},Ze=l("<li><p><strong>Android Studio</strong>를 실행하고 <strong>AVD Manager</strong> 아이콘을 클릭한 뒤 <strong>Create Virtual Device...</strong> 을 선택합니다.</p><ul><li>오래된 Android Studio의 경우 <strong>Android Studio &gt; 도구 &gt; Android &gt; AVD Manager</strong>를 실행하고 <strong>Create Virtual Device...</strong> 를 선택합니다.<br> (<strong>Android</strong> 하위 메뉴는 Android 프로젝트 내에서만 표출됩니다)</li><li>프로젝트를 열고 있지 않는다면 <strong>Configure &gt; AVD Manager</strong>를 선택하고 <strong>Create Virtual Device...</strong> 를 선택합니다.</li></ul></li><li><p>장치 정의를 선택하고 <strong>Next</strong>를 클릭합니다.</p></li><li><p>에뮬레이팅할 Android 버전의 시스템 이미지 1개 이상을 선택하고 <strong>Next</strong>를 클릭합니다.<br> x86 또는 x86_64 이미지를 추천합니다.</p></li>",3),je=e("strong",null,"Hardware - GLES 2.0",-1),en={href:"https://developer.android.com/studio/run/emulator-acceleration",target:"_blank",rel:"noopener noreferrer"},nn=e("p",null,[n("AVD 구성이 정확한지 검증하고 "),e("strong",null,"Finish"),n("를 클릭합니다.")],-1),tn={href:"https://developer.android.com/studio/run/managing-avds",target:"_blank",rel:"noopener noreferrer"},sn=e("li",null,[e("p",null,[n("Android 가상장치 관리자에서 툴바의 "),e("strong",null,"Run"),n("을 클릭합니다."),e("br"),n(" 에뮬레이터가 시작되고 선택한 OS 버전 및 장치에 대한 기본 화면이 표시됩니다.")])],-1),ln=l(`<h3 id="android-라이선스-동의하기" tabindex="-1"><a class="header-anchor" href="#android-라이선스-동의하기" aria-hidden="true">#</a> Android 라이선스 동의하기</h3><p>Flutter를 사용하기 전에 Android SDK 플랫폼 라이선스를 동의해야 합니다.<br> 이 과정은 아래 나열된 도구가 설치된 후 완료되면 됩니다.</p><ol><li><p>설치된 자바의 버전이 8인지 확인하고 <code>JAVA_HOME</code> 환경변수에 JDK 폴더가 설정되었는지 확인합니다.</p><p>Android Studio 2.2 또는 그 이상의 버전에는 JDK가 포함되어 따로 하실일은 없습니다.</p></li><li><p>열려진 콘솔 윈도우에서 라이선스 동의를 시작하기 위해 아래 명령을 실행합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ flutter doctor --android-licenses
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>동의하기전에 각각의 라이선스 규약을 확인해보시기 바랍니다.</p></li><li><p>라이선스에 동의한 경우 <code>flutter doctor</code>를 다시 실행하여 Flutter를 사용할 준비가 완료되었는지 확인합니다.</p></li></ol><h2 id="macos-설정" tabindex="-1"><a class="header-anchor" href="#macos-설정" aria-hidden="true">#</a> macOS 설정</h2><h3 id="추가적인-macos-요구사항" tabindex="-1"><a class="header-anchor" href="#추가적인-macos-요구사항" aria-hidden="true">#</a> 추가적인 macOS 요구사항</h3><p>macOS 데스크톱 개발을 위해 Flutter SDK 외에 추가로 아래의 내용이 필요합니다.</p>`,6),on={href:"https://developer.apple.com/xcode/",target:"_blank",rel:"noopener noreferrer"},rn={href:"https://cocoapods.org/",target:"_blank",rel:"noopener noreferrer"},an=e("h2",{id:"웹-설정",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#웹-설정","aria-hidden":"true"},"#"),n(" 웹 설정")],-1),dn=e("code",null,"stable",-1),cn=e("br",null,null,-1),un=e("br",null,null,-1),pn=e("h2",{id:"다음단계",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#다음단계","aria-hidden":"true"},"#"),n(" 다음단계")],-1),hn=e("p",null,"선호하는 에디터를 구성하시면 됩니다.",-1);function _n(bn,gn){const s=o("ExternalLinkIcon"),r=o("RouterLink"),a=o("AdsenseB");return d(),c("div",null,[e("p",null,[n("원문 : "),e("a",g,[n("https://docs.flutter.dev/get-started/install/macos"),t(s)])]),m,v,e("ul",null,[f,A,e("li",null,[k,n(" : Flutter는 설치 및 업그레이드에 "),x,n("을 사용합니다. "),S,n("을 포함하여 "),e("a",D,[n("Xcode"),t(s)]),n("를 설치하길 권장합니다."),F,n(" 또는 별도로 "),e("a",E,[n("git 설치"),t(s)]),n("를 진행해도 됩니다.")])]),e("div",B,[O,e("p",null,[e("a",T,[n("애플 실리콘 맥"),t(s)]),n("에 설치할 경우, "),e("a",$,[n("일부 보조도구"),t(s)]),n("를 위한 Rosetta 전환 환경이 가능해야 합니다."),w,n(" 다음을 실행해서 수동으로 설치할 수 있습니다.")]),K]),X,e("ol",null,[e("li",null,[C,e("ul",null,[e("li",null,[e("p",null,[H,n(),e("a",y,[n("flutter_macos_3.0.5-stable.zip"),t(s)])])]),e("li",null,[e("p",null,[P,n(),e("a",R,[n("flutter_macos_arm64_3.0.5-stable.zip"),t(s)])])])]),e("p",null,[n("다른 릴리즈나 오래된 빌드버전은 "),e("a",M,[n("SDK releases"),t(s)]),n(" 페이지를 참고하세요.")]),e("div",I,[V,e("p",null,[n("애플 실리콘 프로세서를 사용하는 맥인지 확인하기 위해 apple.com의 "),e("a",z,[n("애플 싪리콘 맥 컴퓨터"),t(s)]),n("를 참고하세요.")])])]),G]),L,e("div",N,[q,e("p",null,[n("기존 Flutter의 버전을 업그레이드 할 경우 "),e("a",U,[n("Flutter 업그레이드"),t(s)]),n("를 참고하세요.")])]),W,e("div",J,[Q,e("p",null,[n("Flutter 도구는 가끔 구글서버로부터 리소스를 다운받습니다."),Y,n(" Flutter SDK를 다운받거나 사용하기 위해서는 "),e("a",Z,[n("Google Terms of Service"),t(s)]),n("에 동의해야합니다.")]),j,e("p",null,[ee,n(" 도구는 기능 사용 통계를 보고하거나 "),e("a",ne,[n("충돌보고서"),t(s)]),n("를 전송하기 위해 Google Analytics를 사용합니다.")]),te,e("p",null,[n("또한 Dart 도구는 사용량 매트릭스 및 충돌보고서를 구글에 전송합니다."),se,n(" 이런 매트릭스의 제출을 제어하려면, "),e("a",le,[oe,t(s)]),n("에 아래 옵션을 사용하시면 됩니다.")]),re,e("p",null,[e("a",ae,[n("구글 개인정보보호 정책"),t(s)]),n("에 이러한 서비스에서 데이터를 어떻게 처리하는지 안내되어있습니다.")])]),ie,e("ol",null,[e("li",null,[e("p",null,[n("최신 안정화 버전의 Xcode를 설치합니다. ("),e("a",de,[n("웹 다운로드"),t(s)]),n(" 또는 "),e("a",ce,[n("Mac 앱스토어"),t(s)]),n("를 사용)")])]),ue]),pe,e("ol",null,[e("li",null,[e("p",null,[n("앱이 네이티브 iOS코드와 "),e("a",he,[n("Flutter 플러그인"),t(s)]),n("에 의존적이지 않다면 생략해도 됩니다."),_e,n(" 아래 명령을 실행해서 "),e("a",be,[n("CocoaPods 설치 및 구성"),t(s)]),n("합니다.")]),ge,e("div",me,[ve,fe,e("p",null,[n("추가로, "),e("a",Ae,[n("애플 실리콘 맥"),t(s)]),n("에서 설치를 진행한다면, 다음 명령를 실행하세요.")]),ke])]),e("li",null,[xe,e("ol",null,[Se,De,Fe,e("li",null,[Ee,n(" 대상 설정페이지의 "),Be,n(" 아래에 개발팀이 선택되어있는지 확인합니다."),Oe,n(" 팀을 선택하면 Xcode는 개발인증서를 생성하고 다운받고, 계정에 장치를 등록하고 (필요시) 프로비저닝 프로파일을 생성 및 다운받습니다. "),e("ul",null,[e("li",null,[e("p",null,[n("최초 iOS 개발프로젝트를 시작하려면 Xcode에 애플ID로 로그인해야합니다."),Te,n(" 개발 및 테스트는 어떤 애플ID던 지원합니다."),$e,n(" 애플 개발자 프로그램에 등록하는 것은 앱스토어에 앱을 배포할 때 필요로 합니다."),we,n(" 자세한 멤버쉽유형은 "),e("a",Ke,[n("멤버쉽 선택하기"),t(s)]),n("를 참고하세요.")]),Xe]),Ce])])])]),He]),ye,e("ol",null,[e("li",null,[e("a",Pe,[n("Android Studio"),t(s)]),n("를 다운받고 설치합니다.")]),Re,Me]),Ie,Ve,e("ol",null,[e("li",null,[n("장치에서 "),ze,n("과 "),Ge,n("을 활성화 합니다."),Le,n(" 자세한 방법은 "),e("a",Ne,[n("Android 문서"),t(s)]),n("를 참고하시면 됩니다.")]),e("li",null,[n("Windows일 경우 : "),e("a",qe,[n("Google USB Driver"),t(s)]),n("를 설치합니다.")]),Ue,We]),Je,Qe,e("ol",null,[e("li",null,[e("p",null,[n("장치에서 "),e("a",Ye,[n("VM 가속화"),t(s)]),n("를 활성화 합니다.")])]),Ze,e("li",null,[e("p",null,[n("Emulated Performance 아래 "),je,n("을 선택하여 "),e("a",en,[n("장치 가속화"),t(s)]),n("를 활성화 합니다.")])]),e("li",null,[nn,e("p",null,[n("위의 자세한 단계는 "),e("a",tn,[n("AVD 관리하기"),t(s)]),n("를 참고하시면 됩니다.")])]),sn]),ln,e("ul",null,[e("li",null,[e("a",on,[n("Xcode"),t(s)])]),e("li",null,[n("플러그인을 사용한다면 "),e("a",rn,[n("CocoaPods"),t(s)])])]),an,e("p",null,[n("Flutter는 "),dn,n("채널에서 웹 어플리케이션 빌드를 지원합니다."),cn,n(" Flutter 2에서 다른 어플리케이션을 만들면 자동으로 웹으로 빌드가 됩니다."),un,n(" 웹이 안정화되기 전에 생성된 어플리케이션에서 웹을 지원하도록 하려면 위에 설정을 모두 마친 뒤 "),t(r,{to:"/flutter/get-started/web.html"},{default:u(()=>[n("Flutter에서 웹 어플리케이션 빌드하기")]),_:1}),n(" 지침을 따라하시면 됩니다.")]),pn,hn,t(a)])}const vn=i(b,[["render",_n],["__file","macos.html.vue"]]);export{vn as default};
