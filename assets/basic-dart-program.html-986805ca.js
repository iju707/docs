import{_ as i,r as o,o as r,c as u,a as n,b as s,d as t,w as a,e as c}from"./app-95e21c4a.js";const d={},_={href:"https://dart.dev/guides/language/language-tour#a-basic-dart-program",target:"_blank",rel:"noopener noreferrer"},m=c(`<p>아래 코드는 Dart의 많은 기본 기능을 사용한 예제입니다.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token comment">// 함수를 정의</span>
<span class="token keyword">void</span> <span class="token function">printInteger</span><span class="token punctuation">(</span>int aNumber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;숫자는 </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">aNumber</span></span><span class="token string"> 입니다.&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 콘솔에 출력</span>
<span class="token punctuation">}</span>

<span class="token comment">// 앱이 시작하면 실행되는 함수</span>
<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> number <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span> <span class="token comment">// 변수를 정의 및 초기화</span>
    <span class="token function">printInteger</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 함수를 호출</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>아래는 Dart 앱에 전부(또는 거의 대부분) 적용되는 이 프로그램이 사용한 것 들입니다.</p><p><code>// 이것은 주석입니다.</code></p>`,4),k=n("br",null,null,-1),v=n("p",null,[n("code",null,"void")],-1),h=n("p",null,[s("사용되지 않는 값을 나타내는 특수 타입입니다."),n("br"),n("code",null,"printInteger()"),s("나 "),n("code",null,"main()"),s("와 같은 함수는 명시적으로 값을 반환하지 않기 때문에 "),n("code",null,"void"),s(" 반환타입을 가지고 있습니다.")],-1),b=n("p",null,[n("code",null,"int")],-1),g=n("br",null,null,-1),f=n("code",null,"String",-1),x=n("code",null,"List",-1),N=n("code",null,"bool",-1),y=c("<p><code>42</code></p><p>숫자 리터럴입니다.<br> 숫자 리터럴은 컴파일시간 상수 중 하나 입니다.</p><p><code>print()</code></p><p>출력을 표시하는 편리한 방법입니다.</p><p><code>&#39;...&#39;</code> (또는 <code>&quot;...&quot;</code>)</p><p>문자 리터럴입니다.</p><p><code>$variableName</code> (또는 <code>${expression}</code>)</p>",7),w=n("br",null,null,-1),B=n("p",null,[n("code",null,"main()")],-1),D=n("br",null,null,-1),I=n("p",null,[n("code",null,"var")],-1),L=n("p",null,[s("타입을 지정하지 않고 변수를 정의하는 방법입니다."),n("br"),s(" 이 변수의 타입 ("),n("code",null,"int"),s(")는 초기화 값 ("),n("code",null,"42"),s(")에 의해 결정됩니다.")],-1),V={class:"hint-container note"},E=n("p",{class:"hint-container-title"},"Note",-1),$={href:"https://dart.dev/guides/language/effective-dart/style",target:"_blank",rel:"noopener noreferrer"};function q(A,C){const l=o("ExternalLinkIcon"),e=o("RouterLink"),p=o("AdsenseB");return r(),u("div",null,[n("p",null,[s("원문 : "),n("a",_,[s("https://dart.dev/guides/language/language-tour#a-basic-dart-program"),t(l)])]),m,n("p",null,[s("한줄 주석입니다. 또한 Dart는 여러 줄과 문서 주석을 지원합니다."),k,s(" 자세한 내용은 "),t(e,{to:"/flutter/dart-tour/comments.html"},{default:a(()=>[s("주석")]),_:1}),s("를 참고하세요.")]),v,h,b,n("p",null,[s("정수를 가리키는 다른 타입입니다."),g,s(" 다른 "),t(e,{to:"/flutter/dart-tour/built-in-types.html"},{default:a(()=>[s("내장된 타입")]),_:1}),s("으로는 "),f,s(", "),x,s(", "),N,s("이 있습니다.")]),y,n("p",null,[s("문자열 삽입 : 문자 리터럴 내부에 변수 또는 표현식의 해당 문자열을 삽입합니다."),w,s(" 더 자세한 정보는 "),t(e,{to:"/flutter/dart-tour/built-in-types.html#strings"},{default:a(()=>[s("문자열")]),_:1}),s("를 참고하세요.")]),B,n("p",null,[s("앱 실행이 시작될때 필수적으로 요구되는 특수한 최상위 함수입니다."),D,s(" 더 자세한 정보는 "),t(e,{to:"/flutter/dart-tour/funtions.html#the-main-function"},{default:a(()=>[s("main() 함수")]),_:1}),s("를 참고하세요.")]),I,L,n("div",V,[E,n("p",null,[s("이 페이지의 코드는 "),n("a",$,[s("Dart 스타일 가이드"),t(l)]),s("의 규칙을 따릅니다.")])]),t(p)])}const S=i(d,[["render",q],["__file","basic-dart-program.html.vue"]]);export{S as default};
