import{_ as i,r,o as t,c as p,a as e,b as s,d as o,w as a,e as l}from"./app-95e21c4a.js";const u={},h=e("p",null,"Compose를 맥OS, 윈도우, 64비트 리눅스에서 실행할 수 있습니다.",-1),m=e("h2",{id:"사전요구사항",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#사전요구사항","aria-hidden":"true"},"#"),s(" 사전요구사항")],-1),b=e("p",null,"Docker Compose는 Docker Engine을 통해 다양한 동작을 수행하기 때문에, 로컬 또는 원격 등 환경구성에 따라 Docker Engine이 설치되어있어야 합니다.",-1),k=e("li",null,[e("p",null,"맥과 윈도우를 위한 Docker Desktop과 같은 데스크탑 시스템에서는 Docker Compose는 설치대상에 포함되어있습니다.")],-1),v=e("br",null,null,-1),_=e("h2",{id:"compose-설치",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#compose-설치","aria-hidden":"true"},"#"),s(" Compose 설치")],-1),g=e("p",null,[s("아래의 절차는 맥, 윈도우, 윈도우서버2016, 리눅스의 설치절차를 다루며 추가로 "),e("code",null,"pip"),s(" 파이선패키지관리자를 통한 설치 및 컨테이너내부에 설치를 다루고 있습니다.")],-1),C=e("p",null,"다른버전 설치",-1),f=e("strong",null,"v1.28.4",-1),E=e("br",null,null,-1),B=e("br",null,null,-1),A={href:"https://github.com/docker/compose/releases",target:"_blank",rel:"noopener noreferrer"},x=e("br",null,null,-1),D=e("strong",null,"사전릴리즈",-1),q=e("a",{href:"#%EC%82%AC%EC%A0%84%EB%A6%B4%EB%A6%AC%EC%A6%88-%EB%B9%8C%EB%93%9C"},"사전릴리즈 빌드",-1),w=l('<ul><li><a href="#%EB%A7%A5%EC%97%90%EC%84%9C-%EC%84%A4%EC%B9%98">맥에서 설치</a></li><li><a href="#%EC%9C%88%EB%8F%84%EC%9A%B0%EC%97%90%EC%84%9C-%EC%84%A4%EC%B9%98">윈도우에서 설치</a></li><li><a href="#%EC%9C%88%EB%8F%84%EC%9A%B0%EC%84%9C%EB%B2%84%EC%97%90%EC%84%9C-%EC%84%A4%EC%B9%98">윈도우서버에서 설치</a></li><li><a href="#%EB%A6%AC%EB%88%85%EC%8A%A4%EC%97%90%EC%84%9C-%EC%84%A4%EC%B9%98">리눅스에서 설치</a></li><li><a href="#%EB%8B%A4%EB%A5%B8%EB%B0%A9%EB%B2%95%EC%9C%BC%EB%A1%9C-%EC%84%A4%EC%B9%98">다른방법으로 설치</a></li><li><a href="#%EC%82%AC%EC%A0%84%EB%A6%B4%EB%A6%AC%EC%A6%88-%EB%B9%8C%EB%93%9C">사전릴리즈 빌드</a></li></ul><h3 id="맥에서-설치" tabindex="-1"><a class="header-anchor" href="#맥에서-설치" aria-hidden="true">#</a> 맥에서 설치</h3>',2),y=e("strong",null,"Docker Desktop for Mac",-1),P=e("br",null,null,-1),S=e("br",null,null,-1),L=e("h3",{id:"윈도우에서-설치",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#윈도우에서-설치","aria-hidden":"true"},"#"),s(" 윈도우에서 설치")],-1),T=e("strong",null,"Docker Desktop for Windows",-1),N=e("br",null,null,-1),F=e("br",null,null,-1),W=l(`<p>만약 윈도우서버에서 Docker 데몬과 클라이언트를 실행할 경우에는 아래 윈도우서버에서 설치절차를 따르시기 바랍니다.</p><h3 id="윈도우서버에서-설치" tabindex="-1"><a class="header-anchor" href="#윈도우서버에서-설치" aria-hidden="true">#</a> 윈도우서버에서 설치</h3><p>윈도우 서버에서 Docker 데몬과 클라이언트를 직접 실행고 Docker Compose를 설치하려면 아래 절차를 수행하시면 됩니다.</p><ol><li><p>관리자 권한으로 PowerShell을 실행합니다.<br> PowerShell을 검색한 뒤, 오른쪽 클릭하고 <strong>관리자 권한으로 실행</strong>을 선택합니다.<br> 이 앱이 장치를 변경할수 있다는 질문이 표시되면 <strong>예</strong>를 선택합니다.</p></li><li><p>GitHub에서 TLS1.2가 필요하며로 PowerShell에서 다음을 수행합니다.</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token namespace">[Net.ServicePointManager]</span>::SecurityProtocol = <span class="token namespace">[Net.SecurityProtocolType]</span>::Tls12
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>그후 최신 안정화 버전인 Compose (v1.28.4)를 다음 명령으로 다운로드 합니다.</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token function">Invoke-WebRequest</span> <span class="token string">&quot;https://github.com/docker/compose/releases/download/1.28.4/docker-compose-Windows-x86_64.exe&quot;</span> <span class="token operator">-</span>UseBasicParsing <span class="token operator">-</span>OutFile <span class="token variable">$Env</span>:ProgramFiles\\Docker\\docker-compose<span class="token punctuation">.</span>exe
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>정보</strong>: Windows 서버 2019에서는 Compose 실행파일을 <code>$Env:ProgramFiles\\Docker</code>에 추가합니다. 이 디렉터리는 시스템 <code>PATH</code>에 등록되어있기 때문에, 추가 절차없이 <code>docker-compose --version</code> 명령을 실행할 수 있습니다.</p><blockquote><p>다른 버전의 Compose를 설치하려면, <code>1.28.4</code>를 원하는 버전으로 변경하시면 됩니다.</p></blockquote></li><li><p>설치를 테스트합니다.</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>docker-compose <span class="token operator">--</span>version

docker-compose version 1<span class="token punctuation">.</span>28<span class="token punctuation">.</span>4<span class="token punctuation">,</span> build 01110ad01
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="리눅스에서-설치" tabindex="-1"><a class="header-anchor" href="#리눅스에서-설치" aria-hidden="true">#</a> 리눅스에서 설치</h3>`,5),$={href:"https://github.com/docker/compose/releases",target:"_blank",rel:"noopener noreferrer"},G=l("<p>링크의 바이너리를 다운받기 위해 터미널에서 <code>curl</code> 명령으로 다음을 수행하면 됩니다.<br> 단계별 절차는 아래와 같습니다.</p><blockquote><p><code>alpine</code>에서는 다음의 종속 패키지가 필요합니다.<br><code>py-pip</code>, <code>python-dev</code>, <code>libffi-dev</code>, <code>openssl-dev</code>, <code>gcc</code>, <code>libc-dev</code>, <code>rust</code>, <code>cargo</code>, <code>make</code></p></blockquote>",2),H=l(`<li><p>현재 Docker Compose의 안정버전을 다운받으려면 다음을 실행합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">curl</span> <span class="token parameter variable">-L</span> <span class="token string">&quot;https://github.com/docker/compose/releases/download/1.28.4/docker-compose-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-s</span><span class="token variable">)</span></span>-<span class="token variable"><span class="token variable">$(</span><span class="token function">uname</span> <span class="token parameter variable">-m</span><span class="token variable">)</span></span>&quot;</span> <span class="token parameter variable">-o</span> /usr/local/bin/docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>다른 버전의 Compose를 설치하려면, <code>1.28.4</code>를 원하는 버전으로 변경하시면 됩니다.</p></blockquote><p><code>curl</code>사용에 문제가 있다면 <a href="#%EB%8B%A4%EB%A5%B8%EB%B0%A9%EB%B2%95%EC%9C%BC%EB%A1%9C-%EC%84%A4%EC%B9%98">다른방법으로 설치</a>를 참고하시기 바랍니다.</p></li><li><p>바이너리에 실행권한을 설정합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>정보</strong>: 설치후 <code>docker-compose</code>명령이 실패한다면, <code>PATH</code>를 확인해보시기 바랍니다.<br><code>/usr/bin</code> 또는 <code>PATH</code>에 정의된 다른 디렉터리에 심볼릭링크를 생성하면 됩니다.</p></blockquote><p>예로들어:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> /usr/local/bin/docker-compose /usr/bin/docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,2),V=e("code",null,"bash",-1),I=e("code",null,"zsh",-1),M=l(`<li><p>설치를 테스트 합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker-compose</span> <span class="token parameter variable">--version</span>
<span class="token function">docker-compose</span> version <span class="token number">1.28</span>.4, build 1110ad01
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),O=l('<h3 id="다른방법으로-설치" tabindex="-1"><a class="header-anchor" href="#다른방법으로-설치" aria-hidden="true">#</a> 다른방법으로 설치</h3><ul><li><a href="#pip%EB%A1%9C-%EC%84%A4%EC%B9%98">pip로 설치</a></li><li><a href="#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EB%A1%9C-%EC%84%A4%EC%B9%98">컨테이너로 설치</a></li></ul><h4 id="pip로-설치" tabindex="-1"><a class="header-anchor" href="#pip로-설치" aria-hidden="true">#</a> pip로 설치</h4><blockquote><p><code>alpine</code>에서는 다음의 종속 패키지가 필요합니다.<br><code>py-pip</code>, <code>python-dev</code>, <code>libffi-dev</code>, <code>openssl-dev</code>, <code>gcc</code>, <code>libc-dev</code>, <code>rust</code>, <code>cargo</code>, <code>make</code></p></blockquote>',4),R=e("code",null,"pip",-1),z={href:"https://pypi.python.org/pypi/docker-compose",target:"_blank",rel:"noopener noreferrer"},U=e("br",null,null,-1),j=e("code",null,"pip",-1),J={href:"https://virtualenv.pypa.io/en/latest/",target:"_blank",rel:"noopener noreferrer"},K=e("br",null,null,-1),Q=e("br",null,null,-1),X={href:"https://docs.python-guide.org/dev/virtualenvs/",target:"_blank",rel:"noopener noreferrer"},Y=l(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token function">docker-compose</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>만약 virtualenv를 사용하지 않으면,</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> pip <span class="token function">install</span> <span class="token function">docker-compose</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><code>pip</code>는 6.0 이상의 버전이 필요합니다.</p></blockquote><h4 id="컨테이너로-설치" tabindex="-1"><a class="header-anchor" href="#컨테이너로-설치" aria-hidden="true">#</a> 컨테이너로 설치</h4><p>Compose는 간단한 bash 스크립트로 컨테이너 내부에서도 동작가능합니다.<br> 컨테이너에 compose를 설치하려면 다음 명령을 실행합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">curl</span> <span class="token parameter variable">-L</span> <span class="token parameter variable">--fail</span> https://github.com/docker/compose/releases/download/1.28.4/run.sh <span class="token parameter variable">-o</span> /usr/local/bin/docker-compose
<span class="token function">sudo</span> <span class="token function">chmod</span> +x /usr/local/bin/docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="사전릴리즈-빌드" tabindex="-1"><a class="header-anchor" href="#사전릴리즈-빌드" aria-hidden="true">#</a> 사전릴리즈 빌드</h3>`,8),Z={href:"https://github.com/docker/compose/releases",target:"_blank",rel:"noopener noreferrer"},ee=e("p",null,[s("링크의 바이너리를 다운받기 위해 터미널에서 "),e("code",null,"curl"),s(" 명령으로 다음을 수행하면 됩니다."),e("br"),s(" 단계별 절차는 아래와 같습니다.")],-1),se={href:"https://dl.bintray.com/docker-compose/master/",target:"_blank",rel:"noopener noreferrer"},oe=l(`<blockquote><p>사전릴리즈는 릴리즈하기전 새로운 기능을 사용해볼수 있으나 안정을 보장하진 않습니다.</p></blockquote><h2 id="업그레이드" tabindex="-1"><a class="header-anchor" href="#업그레이드" aria-hidden="true">#</a> 업그레이드</h2><p>1.2 이하 버전에서 업그레이드 하려면 Compose를 업그레이드한 뒤 기존 컨테이너를 삭제하거나 전환해야합니다.<br> 이것은 버전 1.3부터 Compose는 컨테이너 추적을 위한 Docker 라벨을 사용하며 이 라벨을 추가하기위해 컨테이너를 재생성해야합니다.</p><p>라벨없이 컨테이너 생성이 감지되면 실행을 거부하므로 두셋트가 되지 끝나지 않습니다.<br> 기존 컨테이너를 유지하고지 한다면(예로 저장하고자 하는 데이터 볼륨을 가지고 있을 경우) Compose 1.5.x를 사용하여 아래 명령으로 전환합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker-compose</span> migrate-to-labels
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>다른방법으로, 유지가 필요없는 경우 삭제하시면 됩니다.<br> Compose에서 새롭게 다시 생성합니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> container <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token parameter variable">-v</span> myapp_web_1 myapp_db_1 <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="설치제거" tabindex="-1"><a class="header-anchor" href="#설치제거" aria-hidden="true">#</a> 설치제거</h2><p><code>curl</code>을 사용하여 설치했다면 다음명령으로 삭제할 수 있습니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">rm</span> /usr/local/bin/docker-compose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>pip</code>를 사용하여 설치했다면 다음명령으로 삭제할 수 있습니다.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip uninstall <span class="token function">docker-compose</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>&quot;권한 거부(Permission denied)&quot; 오류가 발생했다면?</p><p>삭제할 때 &quot;권한 거부(Permission denied)&quot;가 발생했다면 아마 <code>docker-compose</code>를 삭제하기 위한 적절한 권한이 없어서입니다.<br> 강제로 삭제할 경우, 각 명령어 앞에 <code>sudo</code>를 추가하고 다시하시면 됩니다.</p></blockquote><h2 id="다음으로" tabindex="-1"><a class="header-anchor" href="#다음으로" aria-hidden="true">#</a> 다음으로</h2>`,14);function ne(ae,le){const n=r("RouterLink"),c=r("ExternalLinkIcon"),d=r("AdsenseB");return t(),p("div",null,[h,m,b,e("ul",null,[k,e("li",null,[e("p",null,[s("리눅스 시스템의 경우, "),o(n,{to:"/docker/engine/install/#server"},{default:a(()=>[s("Docker Engine 설치하기")]),_:1}),s("를 참고하여 먼저 설치한 뒤,"),v,s(" Compose 설치하기 절차를 진행하면 됩니다.")])]),e("li",null,[e("p",null,[s("root 유저가 아닌 경우, "),o(n,{to:"/docker/engine/install/linux-postinstall.html"},{default:a(()=>[s("root가 아닌 유저로 Docker 관리")]),_:1}),s("를 참고하세요.")])])]),_,g,e("blockquote",null,[C,e("p",null,[s("아래의 절차는 Compose의 현재 안정버전("),f,s(")을 설치하는 것입니다."),E,s(" 다른 버전의 Compose를 설치하려면, 릴리즈 번호를 원하는 버전으로 바꾸면 됩니다."),B,e("a",A,[s("Github의 Compose 저장소 릴리즈 페이지"),o(c)]),s("에서 직접 다운가능한 릴리즈 버전의 목록을 볼 수 있습니다."),x,s(" Compose의 "),D,s("를 설치하려면, "),q,s("를 참고하세요.")])]),w,e("p",null,[y,s("은 다른 Docker 앱과 함께 Compose가 포함되어있습니다."),P,s(" 따라서 맥 사용자는 Compose를 따로 설치할 필요가 없습니다."),S,s(" 설치절차는 "),o(n,{to:"/docker/docker-for-mac/install.html"},{default:a(()=>[s("Docker Desktop on Mac 설치")]),_:1}),s("를 참고하세요.")]),L,e("p",null,[T,s("는 다른 Docker 앱과 함께 Compose가 포함되어있습니다."),N,s(" 따라서 대부분 윈도우 사용자는 Compose를 따로 설치할 필요가 없습니다."),F,s(" 설치절차는 "),o(n,{to:"/docker/docker-for-windows/install.html"},{default:a(()=>[s("Docker Desktop on Windows 설치")]),_:1}),s("를 참고하세요.")]),W,e("p",null,[s("리눅스에서는 "),e("a",$,[s("Github의 Compose 저장소 릴리즈 페이지"),o(c)]),s("에서 Docker Compose 바이너리를 다운받을 수 있습니다.")]),G,e("ol",null,[H,e("li",null,[e("p",null,[s("선택적으로 "),V,s("나 "),I,s(" 쉘에 "),o(n,{to:"/docker/compose/completion.html"},{default:a(()=>[s("자동완성")]),_:1}),s("을 설치하시기 바랍니다.")])]),M]),O,e("p",null,[R,s("를 사용해 "),e("a",z,[s("pypi"),o(c)]),s("에서 Compose를 설치할 수 있습니다."),U,j,s("를 설치할 때, "),e("a",J,[s("virtualenv"),o(c)]),s("를 사용하는 것을 추천합니다."),K,s(" 많은 OS가 가지고 있는 파이선 시스템 패키제엇 docker-compose 종속성과 충돌이 발생할 수 있기 때문입니다."),Q,e("a",X,[s("virtualenv 튜토리얼"),o(c)]),s("을 통해 시작해볼 수 있습니다.")]),Y,e("p",null,[s("사전릴리즈에 관심이 있다면, "),e("a",Z,[s("Github의 Compose 저장소 릴리즈 페이지"),o(c)]),s("에서 릴리즈 후보군을 다운받을 수 있습니다.")]),ee,e("p",null,[s('"master" 브랜치에서 빌드된 사전릴리즈는 '),e("a",se,[s("https://dl.bintray.com/docker-compose/master/"),o(c)]),s("에서 다운받을 수 있습니다.")]),oe,e("ul",null,[e("li",null,[o(n,{to:"/docker/compose/"},{default:a(()=>[s("사용자가이드")]),_:1})]),e("li",null,[o(n,{to:"/docker/compose/gettingstarted.html"},{default:a(()=>[s("시작하기")]),_:1})]),e("li",null,[o(n,{to:"/docker/compose/reference/"},{default:a(()=>[s("명령어 레퍼런스")]),_:1})]),e("li",null,[o(n,{to:"/docker/compose/compose-file/"},{default:a(()=>[s("Compose 파일 레퍼런스")]),_:1})]),e("li",null,[o(n,{to:"/docker/compose/samples-for-compose.html"},{default:a(()=>[s("Compose를 활용한 샘플 어플리케이션")]),_:1})])]),o(d)])}const re=i(u,[["render",ne],["__file","install.html.vue"]]);export{re as default};
