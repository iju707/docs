import{_ as p,r as o,o as c,c as i,a as n,b as s,d as a,e as l}from"./app-95e21c4a.js";const r={},d={href:"https://boto3.amazonaws.com/v1/documentation/api/latest/guide/s3.html",target:"_blank",rel:"noopener noreferrer"},u=n("p",null,"파일이나 S3 객체를 업로드, 다운로드, 복사할 때 파이썬용 AWS SDK는 자동으로 재시도, 분할/통합 전송을 관리합니다.",-1),k=n("p",null,[s("관리 동작은 대부분의 시나리오에 잘 맞도록 알맞은 기본 설정값을 사용하여 동작됩니다."),n("br"),s(" 특별한 경우를 다루기 위해 기본 설정을 요구사항에 맞춰 구성할 수도 있습니다.")],-1),m={href:"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/customizations/s3.html#boto3.s3.transfer.TransferConfig",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"boto3.transfer.TransferConfig",-1),_=n("br",null,null,-1),f=n("code",null,"upload_file",-1),h=n("code",null,"download_file",-1),b=n("code",null,"Config=",-1),g=l(`<p>남은 절에서 <code>TransferConfig</code> 객체를 가지고 다양한 전송 동작을 구성하는지 알아보겠습니다.</p><h2 id="분할전송" tabindex="-1"><a class="header-anchor" href="#분할전송" aria-hidden="true">#</a> 분할전송</h2><p>분할전송은 파일크기가 <code>multipart_threshold</code> 속성의 값을 초과했을때 동작합니다.</p><p>아래 예제에서 <code>TransferConfig</code> 객체에 정의된 한계값보다 파일의 크기가 클경우 분할로 전송되도록 <code>upload_file</code>을 구성하였습니다.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> boto3
<span class="token keyword">from</span> boto3<span class="token punctuation">.</span>s3<span class="token punctuation">.</span>transfer <span class="token keyword">import</span> TransferConfig

<span class="token comment"># 원하는 분할 한계값 설정하기 (5GB)</span>
GB <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">**</span> <span class="token number">3</span>
config <span class="token operator">=</span> TransferConfig<span class="token punctuation">(</span>multipart_threshold<span class="token operator">=</span><span class="token number">5</span> <span class="token operator">*</span> GB<span class="token punctuation">)</span>

<span class="token comment"># 전송 수행하기</span>
s3 <span class="token operator">=</span> boto3<span class="token punctuation">.</span>client<span class="token punctuation">(</span><span class="token string">&#39;s3&#39;</span><span class="token punctuation">)</span>
s3<span class="token punctuation">.</span>upload_file<span class="token punctuation">(</span><span class="token string">&#39;FILE_NAME&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;BUCKET_NAME&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;OBJECT_NAME&#39;</span><span class="token punctuation">,</span> Config<span class="token operator">=</span>config<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="병렬전송-동작" tabindex="-1"><a class="header-anchor" href="#병렬전송-동작" aria-hidden="true">#</a> 병렬전송 동작</h2><p>병렬 S3 API 전송 동작의 최대 숫자는 접속 속도에 맞게 조정될 수 있습니다. 대역폭 사용량을 가감하기 위해 <code>max_concurrency</code> 속성으로 설정할 수 있습니다.</p><p>기본 설정값은 10 입니다. 대역폭 사용량을 줄이려면 값을 줄이고 높이려면 값을 높이면 됩니다.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 다운스트림 대역폭을 조금만 사용하려면 최대 병렬을 감소시킵니다.</span>
config <span class="token operator">=</span> TransferConfig<span class="token punctuation">(</span>max_concurrency<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>

<span class="token comment"># S3 객체를 다운로드 합니다.</span>
s3 <span class="token operator">=</span> boto3<span class="token punctuation">.</span>client<span class="token punctuation">(</span><span class="token string">&#39;s3&#39;</span><span class="token punctuation">)</span>
s3<span class="token punctuation">.</span>download_file<span class="token punctuation">(</span><span class="token string">&#39;BUCKET_NAME&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;OBJECT_NAME&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;FILE_NAME&#39;</span><span class="token punctuation">,</span> Config<span class="token operator">=</span>config<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="쓰레드" tabindex="-1"><a class="header-anchor" href="#쓰레드" aria-hidden="true">#</a> 쓰레드</h2><p>전송동작은 병렬을 구현하기 위해 쓰레드를 사용합니다. <code>use_threads</code> 속성을 <code>False</code>로 설정하여 쓰레드사용을 비활성화 할 수 있습니다.</p><p>쓰레드사용이 비활성화되면, 병렬 전송은 발생되지 않습니다. 따라서, <code>max_concurrency</code> 속성의 값이 무시됩니다.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 쓰레드 사용/병렬 전송 비활성화</span>
config <span class="token operator">=</span> TransferConfig<span class="token punctuation">(</span>use_threads<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

s3 <span class="token operator">=</span> boto3<span class="token punctuation">.</span>client<span class="token punctuation">(</span><span class="token string">&#39;s3&#39;</span><span class="token punctuation">)</span>
s3<span class="token punctuation">.</span>download_file<span class="token punctuation">(</span><span class="token string">&#39;BUCKET_NAME&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;OBJECT_NAME&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;FILE_NAME&#39;</span><span class="token punctuation">,</span> Config<span class="token operator">=</span>config<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function E(C,T){const e=o("ExternalLinkIcon"),t=o("AdsenseB");return c(),i("div",null,[n("p",null,[s("원문 : "),n("a",d,[s("https://boto3.amazonaws.com/v1/documentation/api/latest/guide/s3.html"),a(e)])]),u,k,n("p",null,[s("구성 설정은 "),n("a",m,[v,a(e)]),s(" 객체에 저장됩니다."),_,s(" 객체는 전송 함수("),f,s(", "),h,s(" 등)에서 "),b,s(" 인자로 전달되어집니다.")]),g,a(t)])}const y=p(r,[["render",E],["__file","file-transfer.html.vue"]]);export{y as default};
