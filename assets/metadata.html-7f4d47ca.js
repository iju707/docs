import{_ as p,r as a,o as l,c as i,a as s,b as n,d as e,w as d,e as u}from"./app-95e21c4a.js";const r={},k={href:"https://dart.dev/language/metadata",target:"_blank",rel:"noopener noreferrer"},v=s("p",null,[n("코드에 대한 추가적인 정보를 제공하기 위해 메타데이터를 사용합니다."),s("br"),n(" 메타데이터 어노테이션은 "),s("code",null,"@"),n(" 문자로 시작하며 ("),s("code",null,"deprecated"),n(" 같은)컴파일타임 상수의 참조나 상수 생성자의 호출을 따릅니다.")],-1),m=s("code",null,"@Deprecated",-1),_=s("code",null,"@deprecated",-1),b=s("code",null,"@override",-1),g=s("br",null,null,-1),h=s("code",null,"@override",-1),f=s("br",null,null,-1),w=s("code",null,"@Deprecated",-1),x=u(`<div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">Television</span> <span class="token punctuation">{</span>
  <span class="token comment">/// 대신 전원을 키기위해 [turnOn]를 사용합니다.</span>
  <span class="token metadata function">@Deprecated</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Use turnOn instead&#39;</span></span><span class="token punctuation">)</span>
  <span class="token keyword">void</span> <span class="token function">activate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">turnOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">/// TV의 전원을 킵니다.</span>
  <span class="token keyword">void</span> <span class="token function">turnOn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
  <span class="token comment">// ···</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>자신만의 메타데이터 어노테이션을 정의할수도 있습니다.<br> 아래 2개의 인자를 가지는 <code>@Todo</code> 어노테이션을 정의하는 예제입니다.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">class</span> <span class="token class-name">Todo</span> <span class="token punctuation">{</span>
  <span class="token keyword">final</span> <span class="token class-name">String</span> who<span class="token punctuation">;</span>
  <span class="token keyword">final</span> <span class="token class-name">String</span> what<span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token class-name">Todo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>who<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>what<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고 <code>@Todo</code> 어노테이션을 사용하는 예제입니다.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token metadata function">@Todo</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Dash&#39;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;Implement this function&#39;</span></span><span class="token punctuation">)</span>
<span class="token keyword">void</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Do something&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>메타데이터는 라이브러리, 클래스, typedef, 타입 매개변수, 생성자, 팩토리, 함수, 필드, 인자 변수 선언 전과 가져오기 또는 보내기 지시문 앞에 위치할 수 있습니다.<br> 리플렉션을 사용해 메타데이터를 검색할 수 있습니다.</p>`,6);function y(T,D){const t=a("ExternalLinkIcon"),o=a("RouterLink"),c=a("AdsenseB");return l(),i("div",null,[s("p",null,[n("원문 : "),s("a",k,[n("https://dart.dev/language/metadata"),e(t)])]),v,s("p",null,[n("모든 Dart 코드에 세가지 어노테이션 사용이 가능합니다.("),m,n(", "),_,n(", "),b,n(")"),g,h,n("의 사용 예제로 "),e(o,{to:"/dart/language/extend.html"},{default:d(()=>[n("클래스 확장하기")]),_:1}),n("를 보시면 됩니다."),f,w,n(" 어노테이션 사용예제는 다음과 같습니다.")]),x,e(c)])}const V=p(r,[["render",y],["__file","metadata.html.vue"]]);export{V as default};
