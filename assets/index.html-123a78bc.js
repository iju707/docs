import{_ as d,r as t,o as r,c as p,a as e,b as o,d as s,w as l,e as c}from"./app-95e21c4a.js";const u={},h=e("strong",null,"Compose 파일에 대한 레퍼런스를 찾으신요?",-1),m={href:"https://docs.docker.com/compose/compose-file/",target:"_blank",rel:"noopener noreferrer"},_=c(`<p>Compose는 다중 컨테이너 Docker 어플리케이션을 정의하고 구동하기 위한 도구입니다.<br> Compose에서는 어플리케이션 서비스를 YAML 파일을 사용하여 구성할 수 있습니다.<br> 그리고나서 한번의 명령으로 구성으로부터 모든 서비스를 생성하고 시작할 수 있습니다.<br> Compose의 모든 기능에 대해 알고 싶으면 <a href="#%ED%8A%B9%EC%A7%95">기능목록</a>을 확인해보세요.</p><p>Compose는 모든 환경에서 동작합니다: 운영, 스테이징, 개발, 테스트 등의 CI 워크 플로우. <a href="#%EC%9D%BC%EB%B0%98%EC%A0%81%EC%9D%B8-%EC%82%AC%EC%9A%A9%EC%98%88%EC%8B%9C">일반적인 사용예시</a>에서 다양한 경우에 대해 배울 수 있습니다.</p><p>Compose는 기본적인 3단계 절차로 사용합니다:</p><ol><li><p><code>Dockerfile</code>에 어플리케이션 환경을 정의하고 어디든 생성할 수 있게 합니다.</p></li><li><p><code>docker-compose.yml</code>에 어플리케이션으로 만들 서비스를 정의하고 독립된 환경에서 함께 구동할 수 있게 합니다.</p></li><li><p><code>docker-compose up</code> 을 실행하면 Compose는 전체 어플리케이션을 시작하고 동작하게 합니다.</p></li></ol><p><code>docker-compose.yml</code>은 다음과 같습니다:</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&quot;3.9&quot;</span>  <span class="token comment"># optional since v1.27.0</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">web</span><span class="token punctuation">:</span>
    <span class="token key atrule">build</span><span class="token punctuation">:</span> .
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;5000:5000&quot;</span>
    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> .<span class="token punctuation">:</span>/code
      <span class="token punctuation">-</span> logvolume01<span class="token punctuation">:</span>/var/log
    <span class="token key atrule">links</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> redis
  <span class="token key atrule">redis</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> redis
<span class="token key atrule">volumes</span><span class="token punctuation">:</span>
  <span class="token key atrule">logvolume01</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),C=e("p",null,"Compose는 어플리케이션의 전체 주기를 관리할 명령어를 가지고 있습니다.",-1),k=e("ul",null,[e("li",null,"서비스의 시작, 종료, 재빌드"),e("li",null,"동작중인 서비스의 상태보기"),e("li",null,"동작중인 서비스의 로그출력 보기"),e("li",null,"서비스에서 일회성 명령 수행하기")],-1),E=e("h2",{id:"compose-목차",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#compose-목차","aria-hidden":"true"},"#"),o(" Compose 목차")],-1),b=c('<h2 id="특징" tabindex="-1"><a class="header-anchor" href="#특징" aria-hidden="true">#</a> 특징</h2><p>Compose는 다음과 같은 특징을 가지고 있습니다:</p><ul><li><a href="#%EB%8B%A8%EC%9D%BC%ED%98%B8%EC%8A%A4%ED%8A%B8%EC%97%90-%EB%8F%85%EB%A6%BD%EB%90%9C-%EB%8B%A4%EC%A4%91-%ED%99%98%EA%B2%BD%EA%B5%AC%EC%84%B1">단일호스트에 독립된 다중 환경구성</a></li><li><a href="#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%83%9D%EC%84%B1%EC%8B%9C-%EB%B3%BC%EB%A5%A8%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%80%EC%9E%A5">컨테이너 생성시 볼륨데이터 저장</a></li><li><a href="#%EB%B3%80%EA%B2%BD%EB%90%9C-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EB%A7%8C-%EC%9E%AC%EC%83%9D%EC%84%B1">변경된 컨테이너만 재생성</a></li><li><a href="#%EB%8B%A4%EC%96%91%ED%95%9C-%ED%99%98%EA%B2%BD%EC%A1%B0%ED%95%A9%EC%9D%84-%EC%9C%84%ED%95%9C-%EB%B3%80%EC%88%98%EC%A7%80%EC%9B%90">다양한 환경조합을 위한 변수지원</a></li></ul><h3 id="단일호스트에-독립된-다중-환경구성" tabindex="-1"><a class="header-anchor" href="#단일호스트에-독립된-다중-환경구성" aria-hidden="true">#</a> 단일호스트에 독립된 다중 환경구성</h3><p>Compose는 각각 독립된 환경을 위해 프로젝트 이름을 사용합니다. 이것을 활용해서 다양한 컨텍스트를 만들 수 있습니다:</p><ul><li>개발서버에서는 프로젝트의 기능별 브랜치의 안정화된 버전을 실행하기 위해 단일 환경에서 다수의 복제본을 생성할 수 있습니다.</li><li>CI 서버에서는 서로의 간섭을 방지하기 위해 프로젝트 이름을 빌드번호로 설정하여 보관할 수 있습니다.</li><li>공유서버 또는 개발서버에서는 다른 프로젝트에서 동일한 서비스명을 사용하여 발생하는 간섭을 방지할 수 있습니다.</li></ul>',6),B=e("code",null,"-p",-1),f=e("code",null,"COMPOSE_PROJECT_NAME",-1),v=e("h3",{id:"컨테이너-생성시-볼륨데이터-저장",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#컨테이너-생성시-볼륨데이터-저장","aria-hidden":"true"},"#"),o(" 컨테이너 생성시 볼륨데이터 저장")],-1),A=e("p",null,[o("Compose는 서비스에 의해 사용된 모든 볼륨을 저장합니다."),e("br"),e("code",null,"docker-compose up"),o("으로 실행하면, 기존에 동작중인 컨테이너를 발견할 경우 해당 볼륨을 새로운 컨테이너로 복사합니다."),e("br"),o(" 이 절차로 인하여 볼륨 데이터의 손실을 방지할 수 있습니다.")],-1),D=e("code",null,"docker-compose",-1),g=e("h3",{id:"변경된-컨테이너만-재생성",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#변경된-컨테이너만-재생성","aria-hidden":"true"},"#"),o(" 변경된 컨테이너만 재생성")],-1),x=e("p",null,[o("Compose는 컨테이너 생성에 사용된 구성을 캐싱합니다."),e("br"),o(" 변경없이 서비스를 재시작할 경우 Compose는 기존의 컨테이너를 재사용하게 됩니다."),e("br"),o(" 컨테이너의 재사용은 환경에 대한 변경을 아주 빠르게 할 수 있게 합니다.")],-1),y=e("h3",{id:"다양한-환경조합을-위한-변수지원",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#다양한-환경조합을-위한-변수지원","aria-hidden":"true"},"#"),o(" 다양한 환경조합을 위한 변수지원")],-1),q=e("br",null,null,-1),L=e("br",null,null,-1),N=e("code",null,"extends",-1),w=e("br",null,null,-1),G=e("h2",{id:"일반적인-사용예시",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#일반적인-사용예시","aria-hidden":"true"},"#"),o(" 일반적인 사용예시")],-1),I=e("p",null,"Compose는 다양한 환경에서 사용될 수 있습니다. 아래에서 일반적인 경우를 살펴보시기 바랍니다.",-1),O=e("h3",{id:"개발환경",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#개발환경","aria-hidden":"true"},"#"),o(" 개발환경")],-1),P=e("p",null,[o("개발중인 소프트웨어가 있을때, 독립적인 환경에서 어플리케이션을 실행하고 그것과 상호작용하는 것이 중요합니다."),e("br"),o(" Compose 명령어는 환경울 생성하고 상호작용하는데 사용될 수 있습니다.")],-1),R=e("br",null,null,-1),V=e("code",null,"docker-compose up",-1),M=e("p",null,[o("또한, 이러한 기능은 개발자에게 프로젝트를 시작하기 위한 편리한 방법을 제공합니다."),e("br"),o(' Compose는 단일 장비에 사용할 Compose 파일과 몇개의 명령어로 "개발자 시작 가이드"의 많은 부분을 줄여주게 합니다.')],-1),$=e("h3",{id:"테스트자동화환경",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#테스트자동화환경","aria-hidden":"true"},"#"),o(" 테스트자동화환경")],-1),j=e("br",null,null,-1),H=e("br",null,null,-1),S=e("br",null,null,-1),T=c(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
$ ./run_tests
$ <span class="token function">docker-compose</span> down
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="단일호스트배포" tabindex="-1"><a class="header-anchor" href="#단일호스트배포" aria-hidden="true">#</a> 단일호스트배포</h3><p>Compose는 일반적으로 개발/테스팅 절차에 집중하고 있지만, 운영환경에 기반한 기능도 만들고 있습니다.</p>`,3),F=e("h2",{id:"릴리즈노트",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#릴리즈노트","aria-hidden":"true"},"#"),o(" 릴리즈노트")],-1),J={href:"https://github.com/docker/compose/blob/master/CHANGELOG.md",target:"_blank",rel:"noopener noreferrer"},W=e("h2",{id:"도움받기",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#도움받기","aria-hidden":"true"},"#"),o(" 도움받기")],-1),Y=e("p",null,[o("Docker Compose는 개발이 활성화되어있습니다."),e("br"),o(" 도움이 필요하거나 컨트리뷰트를 하거나 같은 사용자들간의 소통을 위해 다양한 채널을 준비하고 있습니다.")],-1),z={href:"https://github.com/docker/compose/issues",target:"_blank",rel:"noopener noreferrer"},K=e("li",null,[o("실시간으로 프로젝트 관련하여 이야기할 경우: Docker 커뮤니티 슬랙의 "),e("code",null,"#docker-compose"),o(" 채널에 참여하세요.")],-1),Q={href:"https://github.com/docker/compose/pulls",target:"_blank",rel:"noopener noreferrer"};function U(X,Z){const a=t("ExternalLinkIcon"),n=t("RouterLink"),i=t("AdsenseB");return r(),p("div",null,[e("blockquote",null,[e("p",null,[h,o(),e("a",m,[o("마지막 버전은 여기서 확인가능합니다"),s(a)]),o(".")])]),_,e("p",null,[o("Compose 파일에 대한 자세한 정보는 "),s(n,{to:"/docker/compose/compose-file/"},{default:l(()=>[o("Compose 파일 레퍼런스")]),_:1}),o("를 참고하세요.")]),C,k,E,e("ul",null,[e("li",null,[s(n,{to:"/docker/compose/install.html"},{default:l(()=>[o("Compose 설치")]),_:1})]),e("li",null,[s(n,{to:"/docker/compose/gettingstarted.html"},{default:l(()=>[o("Compose 시작하기")]),_:1})]),e("li",null,[s(n,{to:"/docker/compose/django.html"},{default:l(()=>[o("Django 구성해보기")]),_:1})]),e("li",null,[s(n,{to:"/docker/compose/rails.html"},{default:l(()=>[o("Rails 구성해보기")]),_:1})]),e("li",null,[s(n,{to:"/docker/compose/wordpress.html"},{default:l(()=>[o("WordPress 구성해보기")]),_:1})]),e("li",null,[s(n,{to:"/docker/compose/faq.html"},{default:l(()=>[o("자주하는 질문")]),_:1})]),e("li",null,[s(n,{to:"/docker/compose/reference/"},{default:l(()=>[o("명령어 레퍼런스")]),_:1})]),e("li",null,[s(n,{to:"/docker/compose/compose-file/"},{default:l(()=>[o("Compose 파일 레퍼런스")]),_:1})])]),b,e("p",null,[o("다른 프로젝트 이름은 프로젝트 디렉터리의 기본이름이 됩니다. 또는 "),s(n,{to:"/docker/compose/reference/overview.html"},{default:l(()=>[B,o(" 명령어 옵션")]),_:1}),o("이나 "),s(n,{to:"/docker/compose/reference/envvars.html#compose-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%9D%B4%EB%A6%84"},{default:l(()=>[f,o(" 환경변수")]),_:1}),o("를 통해 설정할 수 있습니다.")]),v,A,e("p",null,[o("윈도우 장비에서 "),D,o("를 사용하면, "),s(n,{to:"/docker/compose/reference/envvars.html"},{default:l(()=>[o("환경변수")]),_:1}),o("를 참고하여 필요한 환경변수를 수정해야합니다.")]),g,x,y,e("p",null,[o("Compose는 Compose 파일에 변수를 지원합니다."),q,o(" 이 변수를 사용하여 다른 환경 또는 사용자의 조합으로 커스터마이징이 가능합니다."),L,o(" 자세한 내용은 "),s(n,{to:"/docker/compose/compose-file/compose-file-v3.html#%EB%B3%80%EC%88%98%EC%B9%98%ED%99%98"},{default:l(()=>[o("변수치환")]),_:1}),o("을 참고하시기 바랍니다.")]),e("p",null,[N,o(" 필드를 사용하거나 다수의 파일을 생성하여 Compose 파일을 확장할 수 있습니다."),w,o(" 자세한 내용은 "),s(n,{to:"/docker/compose/extends.html"},{default:l(()=>[o("extends")]),_:1}),o("를 참고하시기 바랍니다.")]),G,I,O,P,e("p",null,[s(n,{to:"/docker/compose/compose-file/"},{default:l(()=>[o("Compose 파일")]),_:1}),o("은 어플리케이션 서비스에 종속되는 모든것(데이터베이스, 큐, 캐시, 웹서비스 API, 등)을 문서화하고 구성할 수 있게 합니다."),R,o(" Compose 명령어 도구를 사용하면 단일 명령으로("),V,o(") 하나 이상의 컨테이너를 생성/시작할 수 있습니다.")]),M,$,e("p",null,[o("연속적 배포 또는 통합과정에서 중요한 부분중에 하나는 자동화된 테스트환경입니다."),j,o(" 자동화된 end-to-end 테스트는 테스트를 수행할 환경이 필요합니다."),H,o(" Compose는 테스트를 위한 독립적인 환경을 생성하고 삭제하는데 편리한 방법을 제공합니다."),S,o(" 전체 환경울 "),s(n,{to:"/docker/compose/compose-file/"},{default:l(()=>[o("Compose 파일")]),_:1}),o("에 정의하고 아래의 명령어로 이 환경울 생성/삭제할 수 있습니다.")]),T,e("p",null,[o("운영환경에 기반한 기능에 대한 자세한 내용은 "),s(n,{to:"/docker/compose/production.html"},{default:l(()=>[o("운영에서의 Compose")]),_:1}),o("를 참고하시기 바랍니다.")]),F,e("p",null,[o("Docker Compose의 과거/현재 릴리즈에 대한 변경상세 내용을 보려면, "),e("a",J,[o("CHANGELOG"),s(a)]),o("를 참고하시기 바랍니다.")]),W,Y,e("ul",null,[e("li",null,[o("버그나 파일기능 요청을 보고할 경우: "),e("a",z,[o("Github의 이슈추적기"),s(a)]),o("를 활용하세요.")]),K,e("li",null,[o("코드나 문서에 컨트리뷰트할 경우: "),e("a",Q,[o("Github의 pull request"),s(a)]),o("를 요청하세요.")])]),s(i)])}const oe=d(u,[["render",U],["__file","index.html.vue"]]);export{oe as default};
