import{_ as c,r,o as l,c as i,a as o,b as e,d as t,e as s}from"./app-95e21c4a.js";const d="/assets/ml-gs-create-web-jobs-1-d7671802.jpg",_={},p={href:"https://www.elastic.co/guide/en/machine-learning/7.13/ml-gs-jobs.html",target:"_blank",rel:"noopener noreferrer"},g=s('<p>키바나 샘플 데이터 셋은 체험할 수 있도록 몇몇 사전구성된 이상탐지 잡을 포함하고 있습니다.<br> 잡을 추가하기 위해 아래의 방법 또한 사용할 수 있습니다.</p><ul><li><p>키바나 홈페이지에서 샘플 웹 로그 데이터 셋을 불러온 뒤, <strong>View Data &gt; ML jobs</strong> 를 클릭합니다.</p></li><li><p>머신 러닝 앱에서 <strong>Data Visualizer</strong> 또는 <strong>Anomaly Detection</strong> 잡 마법사에서 <code>kibana_sample_data_logs</code> 인덱스 패턴을 선택할 때 알려진 구성을 사용하여 잡을 생성할 것인지 추천합니다.<br><strong>Kibana sample data web logs</strong> 구성을 선택합니다.</p></li></ul><p><img src="'+d+'" alt="ml-gs-create-web-jobs-1" loading="lazy"></p><p>기본값을 선택하고 <strong>Create Jobs</strong> 를 클릭합니다.</p><p>마법사는 3개의 잡과 3개의 데이터피드를 생성합니다.</p>',5),m={class:"hint-container tip"},h=s('<p class="hint-container-title">Tips</p><p><strong>데이터피드, 버킷, 디텍터</strong></p><p>데이터피드는 엘라스틱서치의 시계열 데이터를 가리키며 이상탐지 잡에 분석을 위해 제공됩니다.</p><p>잡은 처리를 위한 배치로 시계열로 분할한 버킷을 사용합니다.<br> 예로 들어, 3개의 예제 웹 로그 잡은 1시간 단위로 버킷을 사용합니다.</p><p>각각 이상탐지 잡은 한개 이상의 디텍터를 포함하고 있으며 발생할 분석의 유형(예로, <code>max</code>, <code>average</code>, <code>rare</code>와 같은 분석적 함수)과 분석될 항목을 정의합니다.<br> 분석적 함수 일부는 단일 변칙 데이터 지점을 살펴봅니다.<br> 예로 들어, <code>max</code> 는 버킷내 최대값을 식별합니다.<br> 다른 것은 버킷 길이 전반적으로 몇몇 집합을 수행합니다.<br> 예로 들어, <code>mean</code> 은 버킷내 보이는 모든 데이터 지점의 평균을 계산합니다.</p>',5),b={href:"https://www.elastic.co/guide/en/machine-learning/7.17/ml-datafeeds.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.elastic.co/guide/en/machine-learning/7.17/ml-buckets.html",target:"_blank",rel:"noopener noreferrer"},w={href:"https://www.elastic.co/guide/en/machine-learning/7.17/ml-functions.html",target:"_blank",rel:"noopener noreferrer"},f=o("strong",null,"Machine Learning > Anomaly Detection > Job Management",-1),k=o("br",null,null,-1),x={href:"https://github.com/elastic/kibana/tree/7.17/x-pack/plugins/ml/server/models/data_recognizer/modules/sample_data_weblogs",target:"_blank",rel:"noopener noreferrer"},j=o("br",null,null,-1),v=s("<ul><li><code>low_request_rate</code> 는 <code>low_count</code> 함수를 사용하여 흔치않은 낮은 요청비율을 찾습니다.</li><li><code>response_code_rates</code> 는 <code>count</code> 함수를 사용하고 <code>response.keyword</code> 값으로 분석을 분할해서 HTTP 응답코드의 비정상적 이벤트 비율을 찾습니다.</li><li><code>url_scanning</code> 은 <code>high_distinct_count</code> 함수를 사용하고 <code>clientip</code> 항목의 모집단 분석을 수행하여 비정상적으로 높은 고유한 수의 URL에 접근하는 클라이언트 IP를 찾습니다.</li></ul><p>다음 단계는 결과를 보고 3개의 잡에서 생성된 인사이트의 유형을 살펴보겠습니다.</p>",2);function V(B,L){const n=r("ExternalLinkIcon"),a=r("AdsenseB");return l(),i("div",null,[o("p",null,[e("원문 : "),o("a",p,[e("https://www.elastic.co/guide/en/machine-learning/7.13/ml-gs-jobs.html"),t(n)])]),g,o("div",m,[h,o("p",null,[e("자세한 정보는 "),o("a",b,[e("데이터피드"),t(n)]),e(", "),o("a",u,[e("버킷"),t(n)]),e(", "),o("a",w,[e("함수 참조"),t(n)]),e("를 보세요.")])]),o("p",null,[e("잡과 데이터피드에 대한 상세 구성을 보고 싶을 경우 "),f,e(" 페이지를 참고하세요."),k,e(" 또는 "),o("a",x,[e("깃허브"),t(n)]),e("에서 구성파일을 살펴볼 수 있습니다."),j,e(" 이번 튜토리얼 목적에 맞게 각각 잡의 목표를 빠르게 살펴보겠습니다.")]),v,t(a)])}const A=c(_,[["render",V],["__file","ml-gs-jobs.html.vue"]]);export{A as default};
