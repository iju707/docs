import{_ as c,r as e,o as l,c as i,a as n,b as s,d as a,e as p}from"./app-95e21c4a.js";const u={},r={href:"https://dart.dev/language/typedefs",target:"_blank",rel:"noopener noreferrer"},d=p(`<p>타입별칭(종종 <code>typedef</code> 키워드로 선언되어 _typedef_로 불림)은 타입을 참조하기 위한 간결한 방법입니다.<br><code>IntList</code>라는 타입별칭을 선언하고 사용하는 간단한 예제입니다.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">typedef</span> <span class="token class-name">IntList</span> <span class="token operator">=</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>int<span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
<span class="token class-name">IntList</span> il <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>타입별칭은 타입 인자를 가질 수 있습니다.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">typedef</span> <span class="token class-name">ListMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">X</span><span class="token punctuation">&gt;</span></span> <span class="token operator">=</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">X</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">X</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> m1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// Verbose.</span>
<span class="token class-name">ListMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> m2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 동일하지만 좀더 간결하고 명확합니다.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),k={class:"hint-container note"},m=n("p",{class:"hint-container-title"},"버전노트",-1),v=n("br",null,null,-1),g={href:"https://dart.dev/guides/language/evolution#language-versioning",target:"_blank",rel:"noopener noreferrer"},_=p(`<p>대부분의 상황에서 함수에 대하여 typedef 대신 인라인 함수 타입을 사용하는 것을 권장합니다.<br> 하지만 함수 tyepdef도 나름 유용합니다.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">typedef</span> <span class="token class-name">Compare</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token operator">=</span> int <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token class-name">T</span> a<span class="token punctuation">,</span> <span class="token class-name">T</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>

int <span class="token function">sort</span><span class="token punctuation">(</span>int a<span class="token punctuation">,</span> int b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">assert</span><span class="token punctuation">(</span>sort <span class="token operator">is</span> <span class="token class-name">Compare</span><span class="token generics"><span class="token punctuation">&lt;</span>int<span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// True!</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function b(f,h){const t=e("ExternalLinkIcon"),o=e("AdsenseB");return l(),i("div",null,[n("p",null,[s("원문 : "),n("a",r,[s("https://dart.dev/language/typedefs"),a(t)])]),d,n("div",k,[m,n("p",null,[s("2.13 버전이전에는 typedef가 함수 타입만 제한되었습니다."),v,s(" 새로운 typedef를 사용하려면 최소 2.13 이상의 "),n("a",g,[s("언어버전"),a(t)]),s("이 필요합니다.")])]),_,a(o)])}const L=c(u,[["render",b],["__file","typedefs.html.vue"]]);export{L as default};
